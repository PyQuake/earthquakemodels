quakes=c(0.0009118819655545165, 0.0010722457480732011, 0.0012608111440847705, 0.0014825376961437237, 0.0017432571331550376, 0.0020498267532762363, 0.0024103097807736365, 0.002834187440478855, 0.0033326083277104117, 0.00391868163244994, 0.004607821929992753, 0.005418154606565472, 0.006370992583190564, 0.0074913968763247515, 0.008808835738826609, 0.010357959717613703, 0.01217951301314644, 0.014321405110810632, 0.016839970869653588, 0.019801452210629476, 0.023283740374897006, 0.027378424576081903, 0.032193200929020456, 0.03785470501329344, 0.04451184257206647, 0.05233970594843238, 0.06154417926719389, 0.07236735348502549, 0.08509389373266416, 0.10005852641943402, 0.11765484302177923, 0.1383456521081737, 0.1626751518736282, 0.19128324333905475, 0.2249223606733244, 0.2644772612998241, 0.31098829629592817, 0.36567877313053676, 0.42998713041924, 0.5056047709396918, 0.5945205479701945, 0.6990730750065262, 0.8220122346781872, 0.9665715046375067, 1.1365530026970612, 1.3364274880254718, 1.5714519485776512, 1.8478078674788705, 2.172763804968548, 2.554866572043848, 3.004166023946432, 3.5324793858860044, 4.15370206314937, 4.884173110350356, 5.743104972190109, 6.753088798531288, 7.940688624303146, 9.337140042028006, 10.979171743067036, 12.909971535307495, 15.180322244953894, 17.849937378282036, 20.98903167319145, 24.68016784833302, 29.02042812198362, 34.123967614754356, 40.125016794315094, 47.18141193077247, 55.47874641878364, 65.23525215217744, 76.70753933829562, 90.19734571746842, 106.05947270185597, 124.71111716558241, 146.6428443257332, 172.4314903168543, 202.75533381531605, 238.4119357491972, 280.3391163038581, 329.63962094876985, 387.6101242377833, 455.7753342247026, 535.9280944896187, 630.1765385172666, 740.9995366557454, 871.3118939907725, 1024.541013933847, 1204.7170438875164, 1416.578873949096, 1665.6987765720148, 1958.6289653880597, 2303.0739278995034, 2708.0930646400207, 3184.3389645073357, 3744.337583253458, 4402.817694231691, 5177.0982764316595, 6087.544028667466, 7158.100990601122, 8416.92635820832)
plot(quakes)
quakes=c(0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562)
plot(quasi())
plot(quakes)
quakes=c(0.0009118819655545165, 0.0010722457480732011, 0.0012608111440847705, 0.0014825376961437237, 0.0017432571331550376, 0.0020498267532762363, 0.0024103097807736365, 0.002834187440478855, 0.0033326083277104117, 0.00391868163244994, 0.004607821929992753, 0.005418154606565472, 0.006370992583190564, 0.0074913968763247515, 0.008808835738826609, 0.010357959717613703, 0.01217951301314644, 0.014321405110810632, 0.016839970869653588, 0.019801452210629476, 0.023283740374897006, 0.027378424576081903, 0.032193200929020456, 0.03785470501329344, 0.04451184257206647, 0.05233970594843238, 0.06154417926719389, 0.07236735348502549, 0.08509389373266416, 0.10005852641943402, 0.11765484302177923, 0.1383456521081737, 0.1626751518736282, 0.19128324333905475, 0.2249223606733244, 0.2644772612998241, 0.31098829629592817, 0.36567877313053676, 0.42998713041924, 0.5056047709396918, 0.5945205479701945, 0.6990730750065262, 0.8220122346781872, 0.9665715046375067, 1.1365530026970612, 1.3364274880254718, 1.5714519485776512, 1.8478078674788705, 2.172763804968548, 2.554866572043848, 3.004166023946432, 3.5324793858860044, 4.15370206314937, 4.884173110350356, 5.743104972190109, 6.753088798531288, 7.940688624303146, 9.337140042028006, 10.979171743067036, 12.909971535307495, 15.180322244953894, 17.849937378282036, 20.98903167319145, 24.68016784833302, 29.02042812198362, 34.123967614754356, 40.125016794315094, 47.18141193077247, 55.47874641878364, 65.23525215217744, 76.70753933829562, 90.19734571746842, 106.05947270185597, 124.71111716558241, 146.6428443257332, 172.4314903168543, 202.75533381531605, 238.4119357491972, 280.3391163038581, 329.63962094876985, 387.6101242377833, 455.7753342247026, 535.9280944896187, 630.1765385172666, 740.9995366557454, 871.3118939907725, 1024.541013933847, 1204.7170438875164, 1416.578873949096, 1665.6987765720148, 1958.6289653880597, 2303.0739278995034, 2708.0930646400207, 3184.3389645073357, 3744.337583253458, 4402.817694231691, 5177.0982764316595, 6087.544028667466, 7158.100990601122, 8416.92635820832)
plot(quakes)
quakes=c(0.0009118819655545165, 0.004607821929992753, 0.023283740374897006, 0.11765484302177923, 0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562, 387.6101242377833, 1958.6289653880597)
plot(quakes)
plot(0.0009118819655545165, 0.004607821929992753, 0.023283740374897006, 0.11765484302177923, 0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562)
quakes=c(0.0009118819655545165, 0.004607821929992753, 0.023283740374897006, 0.11765484302177923, 0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562)
plot(quakes)
omori=c(88.54674932955562, 14.60476702669664, 0.9041698686485347, 0.0463769533904781, 0.0023297930647788205, 0.00011679357760072451, 5.853681979362953e-06, 2.9337975428414e-07)
plot(omori)
poisson()
poisson(5)
?poisson
ppois(10*(15:25), lambda = 100)
plot(ppois(10*(15:25), lambda = 100))
?levelplot
options(scipen=999)
library(grid)
library(latticeExtra)
library(png)
library(grDevices)
library(RColorBrewer)
?levelplot
datafilename="http://personality-project.org/R/datasets/R.appendix1.data"
data.ex1=read.table(datafilename,header=T)   #read the data into a table
aov.ex1 = aov(Alertness~Dosage,data=data.ex1)  #do the analysis of variance
summary(aov.ex1)                                    #show the summary table
print(model.tables(aov.ex1,"means"),digits=3)       #report the means and the number of subjects/cell
boxplot(Alertness~Dosage,data=data.ex1)
datafilename="http://personality-project.org/R/datasets/R.appendix1.data"
data.ex1=read.table(datafilename,header=T)   #read the data into a table
version
?aov
a = c(-2025.7, -2025.7, -2025.3, -2025.3, -2025.7, -2025.3, -2025.3, -2025.7, -2025.3, -2025.3)
b = c(-2031.46,-2031.46,-2031.46,-2031.46,-2031.46,-2031.46,-2031.46,-2031.46,-2031.46,-2031.4)
`length(a)
))
''
'
`
length(a)
length(b)
t.test(a,b)
t.test(a,b)
?t.test
hist(a)
plot(a)
> kruskal.test(a,b)
a
b
?> kruskal.test
kruskal.test(a,b)
?kruskal.test
?aov
?t.test
subTabela3 = subTabela[subTabela$region=='Kanto'|subTabela$region=='EastJapan',]
subTabela3 = subTabela3[subTabela3$model=='ReducedGAModelSC'|subTabela3$model=='GAModelSC'|
subTabela3$model=='EMP-ReducedGAModelSC'|subTabela3$model=='EMP-GAModelSC',]
summary(subTabela3)
resultANOVA = aov(loglikeValues~model+years+regions , data = subTabela3)
summary(resultANOVA)
install.packages("multicomp")
install.packages("multcomp")
install.packages("ETAS")
summary(iran.quakes)
library("ETAS", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
summary(iran.quakes)
iran.cat <- catalog(iran.quakes, time.begin="1973/01/01",                    study.start="1996/01/01", study.end="2016/01/01",                    lat.range=c(25, 42), long.range=c(42, 63), mag.threshold=4.5)
iran.cat <- catalog(iran.quakes, time.begin="1973/01/01",
study.start="1996/01/01", study.end="2016/01/01",
lat.range=c(25, 42), long.range=c(42, 63), mag.threshold=4.5)
print(iran.quakes)
head(iran.quakes)
iran.cat <- catalog(iran.quakes, time.begin="1973/01/01",study.start="1996/01/01", study.end="2016/01/01",lat.range=c(25, 42), long.range=c(42, 63), mag.threshold=4.5)
install.packages("spatstat")
iran.cat <- catalog(iran.quakes, time.begin="1973/01/01",study.start="1996/01/01", study.end="2016/01/01",lat.range=c(25, 42), long.range=c(42, 63), mag.threshold=4.5)
jpoly <- list(long=c(134.0, 137.9, 143.1, 144.9, 147.8,
137.8, 137.4, 135.1, 130.6), lat=c(31.9, 33.0, 33.2,
35.2, 41.3, 44.2, 40.2, 38.0, 35.4))
jap.cat <- catalog(jap.quakes, time.begin="1966-01-01",
study.start="1970-01-01", study.end="2010-01-01",
region.poly=jpoly, mag.threshold=4.5)
install.packages("spatstat")
setRepositories()
install.packages("spatstat")
library(ETAS)
iran.cat <- catalog(iran.quakes, time.begin="1973/01/01",study.start="1996/01/01", study.end="2016/01/01",lat.range=c(25, 42), long.range=c(42, 63), mag.threshold=4.5)
install.packages("spatstat")
install.packages("spatstat")
iran.cat <- catalog(iran.quakes, time.begin="1973/01/01",study.start="1996/01/01", study.end="2016/01/01",lat.range=c(25, 42), long.range=c(42, 63), mag.threshold=4.5)
library(ETAS)
summary(iran.quakes)
library(ETAS)
install.packages("ETAS")
library(ETAS)
summary(iran.quakes)
iran.cat <- catalog(iran.quakes, time.begin="1973/01/01",study.start="1996/01/01", study.end="2016/01/01",lat.range=c(25, 42), long.range=c(42, 63), mag.threshold=4.5)
print(iran.cat)
plot(iran.cat)
param01 <- c(0.46, 0.23, 0.022, 2.8, 1.12, 0.012, 2.4, 0.35)
iran.fit <- etas(iran.cat, param0=param01, no.itr=5)
iran.fit
#!/usr/bin/env Rscript
options(scipen=999)
library(grid)
library(latticeExtra)
library(png)
library(grDevices)
library(RColorBrewer)
setwd("~/Documents/estudos/unb/earthquakemodels/Zona2/DataFromR")
load("newdata.Rda")
summary(finalData)
setwd("~/Documents/estudos/unb/earthquakemodels/Zona3/sc-weights")
chooseRegion = function(i){
if (i==1) {
region="Kanto"
}
else if (i==2) {
region="Kansai"
}
else if (i==3) {
region = "Tohoku"
}
else{
region = "EastJapan"
}
return(region)
}
loadData = function(region, year, depth){
# loglikelihoodKanto_100_2005
file = paste('loglikelihood',region,'_',depth,'_',year,".txt",sep="")
data = read.csv2(file, sep='\n', header=F)
return(data)
}
convertToNumeric = function(model){
values = rep(0, length(model$V1))
for (k in 1:length(model$V1)){
values[k] = as.numeric(levels(model$V1[k]))[model$V1[k]]
}
return(values)
}
region = chooseRegion(1)
for (year in 2005:2010){
#gamodelpar
gaModelPar100 = loadData(region, year, '100')
valuesGAPar100 = convertToNumeric(gaModelPar100)
loglikeValues = c(valuesGAPar100)
nameGa = c(rep("GAModel-PSHM",10))
years = c(rep(toString(year),10))
regions = c(rep(region, 10))
depth100 = c(rep('100',10))
depthsAmodel = c(depth100)
model = c(nameGa)
depths = c(depthsAmodel, depthsAmodel)
data = data.frame(loglikeValues, model,depths, years, regions)
finalData=rbind(finalData, data)
rm(data)
}
summary(finalData)
# gamodelPSHMKanto_100_20053.txt
calcMedia = function(type, year, depth, region,r,c){
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,region,'_',depth,'_',year,i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
plotMatrixModel = function(modelData, fileToSave, r, c){
# TODO -- hardcoded map is BAD
matrixData = matrix(nrow = r, ncol = c)
k = 1
for (i in 1:r){
for (j in 1:c){
if(is.na(modelData[k])==T){
value=0
}
else{
value = modelData[k]
if (value > 12){
value = 12
}
}
matrixData[i,j] = value
k = k + 1
}
}
png(fileToSave, width = 800, height = 800)
jBrewColors <- rev(heat.colors(16))
p = levelplot((matrixData), col.regions = jBrewColors, alpha.regions=0.6)
grid.raster(as.raster(readPNG(imagePath)))
print( p+ layer(grid.raster(as.raster(readPNG(imagePath))), under=T))
dev.off()
}
plotModelsByYears= function(type, depth){
year=2005
#modelo
while(year<=2010){
print("aqqq")
region= 'Kanto'
saveFile = paste('./heatMap/',region,"_",depth,'_',year,".png",sep="")
mediaKanto=calcMedia(type=type,year=year, region=region, depth=depth, 45,45)
imagePath<<-"../../data/kantomap.png"
print('ai')
plotMatrixModel(mediaKanto, saveFile, 45, 45)
year=year+1
}
}
plotModelsByYears('gamodelPSHM', 100)
mean(finalData$loglikeValues[finalData$model=='GAModel-PSHM'&finalData$year=='2005'])
mean(finalData$loglikeValues[finalData$model=='GAModel-PSHM'&finalData$year=='2006'])
mean(finalData$loglikeValues[finalData$model=='GAModel-PSHM'&finalData$year=='2007'])
mean(finalData$loglikeValues[finalData$model=='GAModel-PSHM'&finalData$year=='2008'])
mean(finalData$loglikeValues[finalData$model=='GAModel-PSHM'&finalData$year=='2009'])
mean(finalData$loglikeValues[finalData$model=='GAModel-PSHM'&finalData$year=='2010'])
mean(-2281.91345509
-2282.32709009
-2283.69160634
-2286.02606009
-2285.48748636
-2284.59469633
-2288.13327006
-2286.91885012
-2283.23018007
-2285.15099883
)
mean(-2281.91345509, -2282.32709009, -2283.69160634, -2286.02606009, -2285.48748636, -2284.59469633, -2288.13327006, -2286.91885012, -2283.23018007, -2285.15099883, )
mean(-2207.25527113, -2200.99173245, -2207.64291118, -2208.24497117, -2203.33158123, -2206.51208731, -2206.91542235, -2208.31875739, -2206.20124746, -2206.4156674, , )
mean(-2178.10135346, -2176.78259469, -2181.38465469, -2177.97641472, -2176.27744472, -2176.20856343, -2179.38465469, -2176.1805347, -2176.10135346, -2178.58877467, )
mean(-2108.36892758, -2105.46044256, -2103.9532588, -2106.21056509, -2106.74913882, -2103.1648076, -2108.35119881, -2103.36353255, -2104.74913882, -2100.88641129)
mean(-2103.53471888, -2104.48356636, -2105.64192885, -2102.73883886, -2101.21056509, -2101.42750891, -2105.73883886, -2102.03986886, -2105.68768634, -2104.73883886, )
mean(-2103.5)
mean(-2103.06024903, -2100.72579528, -2102.08107649, -2103.15715904, -2100.74891907, -2102.66230902, -2104.66230902, -2100.83300525, -2102.38979785, -2102.57102159, )
