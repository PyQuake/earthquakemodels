reducedGAModel = loadDataLoglikelihood('GAModel',region, year+5, tournizeRegion)
tournizeRegion = 'tournsize=2GAModel'
reducedGAModel = loadDataLoglikelihood('GAModel',region, year+5, tournizeRegion)
tournizeRegion = 'tournsize=2'
reducedGAModel = loadDataLoglikelihood('GAModel',region, year+5, tournizeRegion)
gaModel = loadDataLoglikelihood('GAModel', region, year+5, 'GAModel')
loadDataLoglikelihood = function(type, region, year){
setwd("~/Documents/estudos/master-unb/earthquakemodels/Zona4/")
file = paste(type,'/',region,type,year,"_loglikelihood.txt",sep="")
data = read.csv2(file, sep='\n', header=F)
return(data)
}
gaModel = loadDataLoglikelihood('GAModel', region, year+5)
reducedGAModel = loadDataLoglikelihood('ReducedGAModel',region, year+5)
file = paste(type,'/',region,type,year,"_loglikelihood.txt",sep="")
file = paste(type,'/',region,type,year,"_loglikelihood.txt",sep="")
loadDataLoglikelihood = function(type, region, year){
setwd("~/Documents/estudos/master-unb/earthquakemodels/Zona4/")
file = paste(type,'/',region,type,year,"_loglikelihood.txt",sep="")
print(file)
data = read.csv2(file, sep='\n', header=F)
return(data)
}
gaModel = loadDataLoglikelihood('GAModel', region, year+5)
loadDataLoglikelihood = function(type, region, year, prefix){
setwd("~/Documents/estudos/master-unb/earthquakemodels/Zona4/")
file = paste(type,'/'prefix,region,type,year,"_loglikelihood.txt",sep="")
print(file)
data = read.csv2(file, sep='\n', header=F)
return(data)
}
loadDataLoglikelihood = function(type, region, year, prefix){
setwd("~/Documents/estudos/master-unb/earthquakemodels/Zona4/")
file = paste(type,'/',prefix,region,type,year,"_loglikelihood.txt",sep="")
print(file)
data = read.csv2(file, sep='\n', header=F)
return(data)
}
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
prefix = ''
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
prefix = 'tournsize=2'
reducedGAModel = loadDataLoglikelihood('ReducedGAModel',region, year+5)
reducedGAModel = loadDataLoglikelihood('ReducedGAModel',region, year+5, prefix)
reducedGAModel = loadDataLoglikelihood('GAModel',region, year+5, prefix)
tournsize=2GAModel = loadDataLoglikelihood('GAModel',region, year+5, prefix)
tournsize2GAModel = loadDataLoglikelihood('GAModel',region, year+5, prefix)
loadDataLoglikelihood = function(type, region, year, prefix){
setwd("~/Documents/estudos/master-unb/earthquakemodels/Zona4/")
file = paste(type,'/',prefix,region,type,year,"_loglikelihood.txt",sep="")
data = read.csv2(file, sep='\n', header=F)
return(data)
}
# finalData = data.frame(
#     setNames(replicate(4,numeric(0), simplify = F),
#              c("loglikeValues", "model", "years", "regions")))
createDataFrame4AOV = function(){
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
region = chooseRegion(i)
for (year in 2000:2005) {
prefix = ''
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2GAModel = loadDataLoglikelihood('GAModel',region, year+5, prefix)
loglikeGA = convertToNumeric(gaModel)
loglikeReduced = convertToNumeric(tournsize2GAModel)
loglikeValues = c(loglikeGA, loglikeReduced)
nameGa = c(rep("GAModel",10))
nameLista = c(rep("tournsize2GAModel",10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
}
return(finalData)
}
data = createDataFrame4AOV()
resultANOVA = aov(loglikeValues~model+years+regions, data = data)
summary(resultANOVA)
tuk = TukeyHSD(resultANOVA)
# par(mfrow=c(2,2))
op <- par(mar = c(5,21,4,2))
plot(tuk,las=1)
print(tuk)
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
prefix = ''
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2GAModel = loadDataLoglikelihood('GAModel',region, year+5, prefix)
gaModel
tournsize2GAModel
loglikeGA = convertToNumeric(gaModel)
loglikeReduced = convertToNumeric(tournsize2GAModel)
loglikeGA
loglikeReduced
loglikeValues
loglikeValues = c(loglikeGA, logliketournsize2GAModel)
logliketournsize2GAModel = convertToNumeric(tournsize2GAModel)
loglikeValues = c(loglikeGA, logliketournsize2GAModel)
loglikeValues
nameGa = c(rep("GAModel",10))
nameLista = c(rep("tournsize2GAModel",10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
data
createDataFrame4AOV = function(){
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
region = chooseRegion(i)
for (year in 2000:2005) {
prefix = ''
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2GAModel = loadDataLoglikelihood('GAModel',region, year+5, prefix)
loglikeGA = convertToNumeric(gaModel)
logliketournsize2GAModel = convertToNumeric(tournsize2GAModel)
loglikeValues = c(loglikeGA, logliketournsize2GAModel)
nameGa = c(rep("GAModel",10))
nameLista = c(rep("tournsize2GAModel",10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
}
return(finalData)
}
data = createDataFrame4AOV()
resultANOVA = aov(loglikeValues~model+years+regions, data = data)
summary(resultANOVA)
tuk = TukeyHSD(resultANOVA)
# par(mfrow=c(2,2))
op <- par(mar = c(5,21,4,2))
plot(tuk,las=1)
print(tuk)
data
resultANOVA = aov(loglikeValues~model+years+regions, data = data)
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
region = chooseRegion(i)
for (year in 2000:2005) {
prefix = ''
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2GAModel = loadDataLoglikelihood('GAModel',region, year+5, prefix)
loglikeGA = convertToNumeric(gaModel)
logliketournsize2GAModel = convertToNumeric(tournsize2GAModel)
loglikeValues = c(loglikeGA, logliketournsize2GAModel)
nameGa = c(rep("GAModel",10))
nameLista = c(rep("tournsize2GAModel",10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
}
return(finalData)
finalData
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
prefix = ''
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2GAModel = loadDataLoglikelihood('GAModel',region, year+5, prefix)
loglikeGA = convertToNumeric(gaModel)
logliketournsize2GAModel = convertToNumeric(tournsize2GAModel)
loglikeValues = c(loglikeGA, logliketournsize2GAModel)
nameGa = c(rep("GAModel",10))
nameLista = c(rep("tournsize2GAModel",10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
finalData
loglikeGA
loglikeValues
logliketournsize2GAModel
resultANOVA = aov(loglikeValues~model+years+regions, data = finalData)
gaModel = loadDataLoglikelihood('reducedGAModel', region, year+5, prefix)
prefix = ''
gaModel = loadDataLoglikelihood('reducedGAModel', region, year+5, prefix)
createDataFrame4AOV = function(){
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
region = chooseRegion(i)
for (year in 2000:2005) {
prefix = ''
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
# prefix = 'tournsize=2'
# tournsize2GAModel = loadDataLoglikelihood('GAModel',region, year+5, prefix)
prefix = ''
tournsize2GAModel = loadDataLoglikelihood('reducedGAModel', region, year+5, prefix)
loglikeGA = convertToNumeric(gaModel)
logliketournsize2GAModel = convertToNumeric(tournsize2GAModel)
loglikeValues = c(loglikeGA, logliketournsize2GAModel)
nameGa = c(rep("GAModel",10))
nameLista = c(rep("tournsize2GAModel",10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
}
return(finalData)
}
data = createDataFrame4AOV()
data
resultANOVA = aov(loglikeValues~model+years+regions, data = finalData)
summary(resultANOVA)
tuk = TukeyHSD(resultANOVA)
# par(mfrow=c(2,2))
op <- par(mar = c(5,21,4,2))
plot(tuk,las=1)
print(tuk)
lapply(data, unique)
resultANOVA = aov(loglikeValues~model+years, data = finalData)
resultANOVA = aov(loglikeValues~model+years+regions, data = data)
resultANOVA = aov(loglikeValues~model+years, data = data)
summary(resultANOVA)
tuk = TukeyHSD(resultANOVA)
# par(mfrow=c(2,2))
op <- par(mar = c(5,21,4,2))
plot(tuk,las=1)
print(tuk)
(-2)-(-10)
(-20)-(-3)
createDataFrame4AOV = function(){
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
region = chooseRegion(i)
for (year in 2000:2005) {
prefix = ''
gaModel = loadDataLoglikelihood('GAModel', region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2GAModel = loadDataLoglikelihood('GAModel',region, year+5, prefix)
#             prefix = ''
#             tournsize2GAModel = loadDataLoglikelihood('reducedGAModel', region, year+5, prefix)
loglikeGA = convertToNumeric(gaModel)
logliketournsize2GAModel = convertToNumeric(tournsize2GAModel)
loglikeValues = c(loglikeGA, logliketournsize2GAModel)
nameGa = c(rep("GAModel",10))
nameLista = c(rep("tournsize2GAModel",10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
}
return(finalData)
}
data = createDataFrame4AOV()
data
resultANOVA = aov(loglikeValues~model+years, data = data)
summary(resultANOVA)
tuk = TukeyHSD(resultANOVA)
# par(mfrow=c(2,2))
op <- par(mar = c(5,21,4,2))
plot(tuk,las=1)
print(tuk)
data = createDataFrame4AOV()
resultANOVA = aov(loglikeValues~model+years, data = data)
summary(resultANOVA)
tuk = TukeyHSD(resultANOVA)
# par(mfrow=c(2,2))
op <- par(mar = c(5,21,4,2))
plot(tuk,las=1)
print(tuk)
data = createDataFrame4AOV()
resultANOVA = aov(loglikeValues~model+years, data = data)
summary(resultANOVA)
tuk = TukeyHSD(resultANOVA)
# par(mfrow=c(2,2))
op <- par(mar = c(5,21,4,2))
plot(tuk,las=1)
print(tuk)
data = createDataFrame4AOV()
resultANOVA = aov(loglikeValues~model+years, data = data)
summary(resultANOVA)
tuk = TukeyHSD(resultANOVA)
# par(mfrow=c(2,2))
op <- par(mar = c(5,21,4,2))
plot(tuk,las=1)
print(tuk)
createDataFrame4AOV = function(model){
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
region = chooseRegion(i)
for (year in 2000:2005) {
prefix = ''
gaModel = loadDataLoglikelihood(model, region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2GAModel = loadDataLoglikelihood(model,region, year+5, prefix)
loglikeGA = convertToNumeric(gaModel)
logliketournsize2GAModel = convertToNumeric(tournsize2GAModel)
loglikeValues = c(loglikeGA, logliketournsize2GAModel)
nameGa = c(rep("GAModel",10))
nameLista = c(rep("tournsize2GAModel",10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
}
return(finalData)
}
data = createDataFrame4AOV('gaModel')
data = createDataFrame4AOV('GAModel')
createDataFrame4AOV = function(model){
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
region = chooseRegion(i)
for (year in 2000:2005) {
prefix = ''
gaModel = loadDataLoglikelihood(model, region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2GAModel = loadDataLoglikelihood(model,region, year+5, prefix)
loglikeGA = convertToNumeric(gaModel)
logliketournsize2GAModel = convertToNumeric(tournsize2GAModel)
loglikeValues = c(loglikeGA, logliketournsize2GAModel)
nameGa = c(rep("GAModel",10))
nameLista = c(rep("tournsize2GAModel",10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
}
return(finalData)
}
data = createDataFrame4AOV('GAModel')
data = createDataFrame4AOV()
data = createDataFrame4AOV(teste)
teste='GAModel'
data = createDataFrame4AOV(teste)
createDataFrame4AOV = function(modelName){
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
region = chooseRegion(i)
for (year in 2000:2005) {
prefix = ''
ga = loadDataLoglikelihood(modelName, region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2GAModel = loadDataLoglikelihood(modelName,region, year+5, prefix)
loglike = convertToNumeric(ga)
logliketournsize2 = convertToNumeric(tournsize2)
loglikeValues = c(loglike, logliketournsize2)
nameGA = c(rep(modelName,10))
name=paste(modelName, tournize,sep='')
nameLista = c(rep(name,10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
}
return(finalData)
}
teste='GAModel'
data = createDataFrame4AOV(teste)
createDataFrame4AOV = function(modelName){
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
region = chooseRegion(i)
for (year in 2000:2005) {
prefix = ''
ga = loadDataLoglikelihood(modelName, region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2 = loadDataLoglikelihood(modelName,region, year+5, prefix)
loglike = convertToNumeric(ga)
logliketournsize2 = convertToNumeric(tournsize2)
loglikeValues = c(loglike, logliketournsize2)
nameGA = c(rep(modelName,10))
name=paste(modelName, tournize,sep='')
nameLista = c(rep(name,10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
}
return(finalData)
}
teste='GAModel'
data = createDataFrame4AOV(teste)
createDataFrame4AOV = function(modelName){
finalData = data.frame(
setNames(replicate(4,numeric(0), simplify = F),
c("loglikeValues", "model", "years", "regions")))
for (i in 1:1) {
region = chooseRegion(i)
for (year in 2000:2005) {
prefix = ''
ga = loadDataLoglikelihood(modelName, region, year+5, prefix)
prefix = 'tournsize=2'
tournsize2 = loadDataLoglikelihood(modelName,region, year+5, prefix)
loglike = convertToNumeric(ga)
logliketournsize2 = convertToNumeric(tournsize2)
loglikeValues = c(loglike, logliketournsize2)
nameGA = c(rep(modelName,10))
name=paste(modelName, 'tournsize2',sep='')
nameLista = c(rep(name,10))
years = c(rep(toString(year+5),20))
regions = c(rep(region, 20))
model = c(nameGa, nameLista)
data = data.frame(loglikeValues, model, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
}
}
return(finalData)
}
data = createDataFrame4AOV('GAModel')
resultANOVA = aov(loglikeValues~model+years, data = data)
summary(resultANOVA)
tuk = TukeyHSD(resultANOVA)
# par(mfrow=c(2,2))
op <- par(mar = c(5,21,4,2))
plot(tuk,las=1)
print(tuk)
plot(tuk,las=1)
op <- par(mar = c(5,21,4,2))
plot(tuk,las=1)
