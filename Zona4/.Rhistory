interaction.plot(c$gen, c$meanList, c$stdList, col=c('red','blue'), main=paste('kanto','2005'))
interaction.plot(c$meanList, c(0:99), c$stdList, col=c('red','blue'), main=paste('kanto','2005'))
interaction.plot(c$gen, c$meanList, c$stdList, col=c('red','blue'), main=paste('kanto','2005'))
interaction.plot(ToothGrowth$dose, ToothGrowth$supp, ToothGrowth$len)
oothGrowth$len
ToothGrowth$len
ToothGrowth$supp
ToothGrowth$dose
interaction.plot(c$gen, c$meanList, c$stdList, col=c('red','blue'), main=paste('kanto','2005'))
interaction.plot(c$gen, c$meanList, c$stdList, col=c('red','blue'), main=paste('kanto','2005'))
ToothGrowth$dose
interaction.plot(ToothGrowth$dose, ToothGrowth$supp, ToothGrowth$len)
interaction.plot(c$gen, c$meanList, c$stdList, col=c('red','blue'), main=paste('kanto','2005'))
interaction.plot(c$meanList, c$stdList, c$gen, col=c('red','blue'), main=paste('kanto','2005'))
library(ggplot)
library(ggplot2)
library(ggplot2)
ggplot(c$meanList)
ggplot(c)
c
p<- ggplot(c, aes(x=gen, y=meanList)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=meanList-stdList, ymax=meanList+stdList), width=.2,
position=position_dodge(.9))
print(p
)
p<- ggplot(c, aes(x=gen, y=meanList)) +
geom_bar(stat="identity", color="blue",
position=position_dodge()) +
geom_errorbar(aes(ymin=meanList-stdList, ymax=meanList+stdList), width=.2,
position=position_dodge(.9))
print(p)
logbook
meanList = c(rep(0,100))
stdList = c(rep(0,100))
gen=c(rep(0,100))
for (i in 0:99){
meanList[i+1]=logbook[3+(5*i)]
stdList[i+1]=logbook[5+(5*i)]
gen[i+1]=i+1
}
#library("Hmisc")
c=data.frame(gen, meanList, stdList)
p<- ggplot(c, aes(x=gen, y=meanList)) +
geom_bar(stat="identity", color="blue",
position=position_dodge()) +
geom_errorbar(aes(ymin=meanList-stdList, ymax=meanList+stdList), width=.2,
position=position_dodge(.9))
print(p)
stdList
meanList
stdList
p<- ggplot(c, aes(x=gen, y=meanList)) +
geom_bar(stat="identity", color="blue",
position=position_dodge()) +
geom_errorbar(aes(ymin=meanList+stdList, ymax=meanList-stdList), width=.2,
position=position_dodge(.9))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList)) +
geom_bar(stat="identity", color="blue",
position=position_dodge()) +
geom_errorbar(aes(ymin=meanList, ymax=meanList), width=.2,
position=position_dodge(.9))
print(p)
geom_errorbar(aes(ymin=meanList+stdList, ymax=meanList-stdList),
p<- ggplot(c, aes(x=gen, y=meanList)) +
geom_bar(stat="identity", color="blue",
position=position_dodge()) +
geom_errorbar(aes(ymin=meanList+stdList, ymax=meanList-stdList),
position=position_dodge(.9))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList)) +
geom_bar(stat="identity", color="blue",
position=position_dodge()) +
geom_errorbar(aes(ymin=meanList+stdList, ymax=meanList-stdList), width=1,
position=position_dodge(.9))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList)) +
geom_bar(stat="identity", color="blue",
position=position_dodge()) +
geom_errorbar(aes(ymin=meanList+stdList, ymax=meanList-stdList), width=1,
position=position_dodge(10))
print(p)
p<- ggplot(c, aes(x=gen, y=meanLi, group=supp, color=supp)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=meanList+stdList, ymax=meanList-stdList), width=.2,
position=position_dodge(0.05))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=supp, color=supp)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=meanList+stdList, ymax=meanList-stdList), width=.2,
position=position_dodge(0.05))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=gen, color='blue')) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=meanList+stdList, ymax=meanList-stdList), width=.2,
position=position_dodge(0.05))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=stdList, color='blue')) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=meanList+stdList, ymax=meanList-stdList), width=.2,
position=position_dodge(0.05))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=stdList)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=meanList+stdList, ymax=meanList-stdList), width=.2,
position=position_dodge(0.05))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=stdList)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2,
position=position_dodge(0.05))
print(p)
plot(meanList, col= 'blue', type='l', main= 'text', )
meanList
stdList
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")+
theme_classic() +
scale_color_manual(values=c('#999999','#E69F00'))
p+labs(title="Tooth length per dose", x="Dose (mg)
)
")
p+labs(title="Tooth length per dose", x="Dose (mg)")
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")+
theme_classic())
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")+theme_classic()
p<- ggplot(c, aes(x=gen, y=meanList, group=stdList)) +
geom_line() +
geom_point()+
geom_errorbar(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2,
position=position_dodge(0.05)
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2,
position=position_dodge(0.05))
print(p)
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")+
theme_classic()
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")+
theme_classic() +
scale_color_manual(values=c('#999999','#E69F00'))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1)) +
geom_line() +
geom_point()+
theme_classic()+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2,
position=position_dodge(0.05))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2,
position=position_dodge(0.05))
print(p)
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")+
scale_color_manual(values=c('#999999','#E69F00'))
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length"))
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length"))
p+labs(title="Tooth length per dose", x="Dose (mg)", y = "Length")
?ggplot
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2,color'red'
p<- ggplot(c, aes(x=gen, y=meanList, group=1)) +
geom_line() +
geom_point(color'red')+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2,
position=position_dodge(0.05))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1)) +
geom_line() +
geom_point(color'red')+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2,
position=position_dodge(10.05))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1)) +
geom_line() +
geom_point(color='red')+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2,
position=position_dodge(10.05))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1), color='blue') +
geom_line() +
geom_point(color='red')+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2,
position=position_dodge(10.05))
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1), color='blue') +
geom_line() +
geom_point(color='red')+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=.2)
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1), color='blue') +
geom_line() +
geom_point(color='red')+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=10.2)
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1), color='blue') +
geom_line() +
geom_point(color='red')+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=0.2)
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1)) +
geom_line(color='blue') +
geom_point(color='red')+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=0.2)
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1)) +
geom_line() +
geom_point(color='red')+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=0.2, color='blue')
print(p)
p<- ggplot(c, aes(x=gen, y=meanList, group=1)) +
geom_line(color='orange') +
geom_point(color='orange')+
geom_errorbar(aes(ymin=c$meanList+c$stdList, ymax=c$meanList-c$stdList), width=0.2, color='black')
print(p)
?grid.arrange
?gridExtra
plotConvergencyData(createData(modelName = '200GAModel','EastJapan',year),'ReducedGAModel', region, year)
library(ggplot2)
library(gridExtra)
loadData = function(type,region, year, i){
setwd("~/Documents/estudos/master-unb/earthquakemodels/Zona4/")
file = paste(type,'/',region, type,year,'_',i,'logbook.txt',sep="")
data = read.csv2(file, sep='\t', header=T)
data$std = as.numeric(levels(data$std))[data$std]
data$max = as.numeric(levels(data$max))[data$max]
return(data)
}
chooseRegion = function(i){
if (i==1) {
region="Kanto"
}
else if (i==2) {
region="Kansai"
}
else if (i==3) {
region = "Tohoku"
}
else{
region = "EastJapan"
}
return(region)
}
createData = function(modelName, region, year){
data1 = loadData(modelName, region, year, 0)
data2 = loadData(modelName, region, year, 1)
data3 = loadData(modelName, region, year, 2)
data4 = loadData(modelName, region, year, 3)
data5 = loadData(modelName, region, year, 4)
data6 = loadData(modelName, region, year, 5)
data7 = loadData(modelName, region, year, 6)
data8 = loadData(modelName, region, year, 7)
data9 = loadData(modelName, region, year, 8)
data10 = loadData(modelName, region, year, 9)
data1$std = pmin(data1$std, 500)
data2$std = pmin(data1$std, 500)
data3$std = pmin(data1$std, 500)
data4$std = pmin(data1$std, 500)
data5$std = pmin(data1$std, 500)
data6$std = pmin(data1$std, 500)
data7$std = pmin(data1$std, 500)
data8$std = pmin(data1$std, 500)
data9$std = pmin(data1$std, 500)
data10$std = pmin(data1$std, 500)
maxs = c(rep(0,length(data1$max)))
for (i in 1:length(data1$max)){
maxs[i] = ((data1$max[i] + data2$max[i] + data3$max[i] + data4$max[i] + data5$max[i] +
data6$max[i] + data7$max[i] + data8$max[i] + data9$max[i] + data10$max[i])/10)
}
stds = c(rep(0,length(data1$std)))
for (i in 1:length(data1$std)){
stds[i] = ((data1$std[i] + data2$std[i] + data3$std[i] + data4$std[i] + data5$std[i] +
data6$std[i] + data7$std[i] + data8$std[i] + data9$std[i] + data10$std[i])/10)
}
gen = c(1:100)
data = data.frame(
setNames(replicate(3,numeric(0), simplify = F),
c("maxs", "stds", "gen")))
data = data.frame(maxs, stds, gen)
return (data)
}
plotConvergencyData = function(data, type, region, year){
saveFile = paste("../Zona4/heatMap/", type, region,"_",year,".png",sep="")
png(saveFile, width = 800, height = 800)
if (type == 'GAModel'){
p1<- ggplot(data, aes(x=gen, y=maxs, group=1)) +
geom_line(color='orange') +
geom_point(color='orange')+
geom_errorbar(aes(ymin=data$maxs+data$stds, ymax=data$maxs-data$stds), width=0.2, color='black')
print(p1 +
ggtitle(paste("Convergency Analysis in ",region,"year of", year, "(GAModel)"))+
theme(axis.text=element_text(size=14))+
theme(plot.title = element_text(size=18, face="bold"))
)
dev.off()
}
else{
p1<- ggplot(data, aes(x=gen, y=maxs, group=1)) +
geom_line(color='orange') +
geom_point(color='orange')+
geom_errorbar(aes(ymin=data$maxs+data$stds, ymax=data$maxs-data$stds), width=0.2, color='black')
print(p1 +
ggtitle(paste("Convergency Analysis in ",region,"year of", year, "(ReducedGAModel)"))+
theme(axis.text=element_text(size=14))+
theme(plot.title = element_text(size=18, face="bold"))
)
dev.off()
}
}
plotConvergencyData(createData(modelName = '200GAModel','EastJapan',year),'ReducedGAModel', region, year)
plotConvergencyData(createData(modelName = '200GAModel','EastJapan',2006),'ReducedGAModel', 'EastJapan', 2006)
plotConvergencyData(createData(modelName = 'GAModel','200EastJapan',2006),'ReducedGAModel', 'EastJapan', 2006)
plotConvergencyData(createData(modelName = 'GAModel','200EastJapan',2006),'GAModel', 'EastJapan', 2006)
modelName = 'GAModel'
region="EastJapan"
year=2006
modelName = '200GAModel'
data1 = loadData(modelName, region, year, 0)
modelName = 'GAModel'
region="200EastJapan"
data1 = loadData(modelName, region, year, 0)
region="EastJapan"
data1
data1$std = pmin(data1$std, 500)
data1$max
plot(data1$max)
plot(data1$max)
region="200EastJapan"
data1 = loadData(modelName, region, year, 0)
data2 = loadData(modelName, region, year, 1)
data3 = loadData(modelName, region, year, 2)
data4 = loadData(modelName, region, year, 3)
data5 = loadData(modelName, region, year, 4)
data6 = loadData(modelName, region, year, 5)
data7 = loadData(modelName, region, year, 6)
data8 = loadData(modelName, region, year, 7)
data9 = loadData(modelName, region, year, 8)
data10 = loadData(modelName, region, year, 9)
data1$std = pmin(data1$std, 500)
data2$std = pmin(data1$std, 500)
data3$std = pmin(data1$std, 500)
data4$std = pmin(data1$std, 500)
data5$std = pmin(data1$std, 500)
data6$std = pmin(data1$std, 500)
data7$std = pmin(data1$std, 500)
data8$std = pmin(data1$std, 500)
data9$std = pmin(data1$std, 500)
data10$std = pmin(data1$std, 500)
region= 'EsatJapan'
region= 'EastJapan'
maxs = c(rep(0,length(data1$max)))
for (i in 1:length(data1$max)){
maxs[i] = ((data1$max[i] + data2$max[i] + data3$max[i] + data4$max[i] + data5$max[i] +
data6$max[i] + data7$max[i] + data8$max[i] + data9$max[i] + data10$max[i])/10)
}
stds = c(rep(0,length(data1$std)))
for (i in 1:length(data1$std)){
stds[i] = ((data1$std[i] + data2$std[i] + data3$std[i] + data4$std[i] + data5$std[i] +
data6$std[i] + data7$std[i] + data8$std[i] + data9$std[i] + data10$std[i])/10)
}
gen = c(1:100)
data = data.frame(
setNames(replicate(3,numeric(0), simplify = F),
c("maxs", "stds", "gen")))
data = data.frame(maxs, stds, gen)
data
data$maxs
plot(data$maxs)
plot(data$maxs)
p1<- ggplot(data, aes(x=gen, y=maxs, group=1)) +
geom_line(color='orange') +
geom_point(color='orange')+
geom_errorbar(aes(ymin=data$maxs+data$stds, ymax=data$maxs-data$stds), width=0.2, color='black')
print(p1 +
ggtitle(paste("Convergency Analysis in ",region,"year of", year, "(GAModel)"))+
theme(axis.text=element_text(size=14))+
theme(plot.title = element_text(size=18, face="bold"))
)
dev.off()
p1
gen = c(1:200)
data = data.frame(
setNames(replicate(3,numeric(0), simplify = F),
c("maxs", "stds", "gen")))
data = data.frame(maxs, stds, gen)
p1<- ggplot(data, aes(x=gen, y=maxs, group=1)) +
geom_line(color='orange') +
geom_point(color='orange')+
geom_errorbar(aes(ymin=data$maxs+data$stds, ymax=data$maxs-data$stds), width=0.2, color='black')
print(p1 +
ggtitle(paste("Convergency Analysis in ",region,"year of", year, "(GAModel)"))+
theme(axis.text=element_text(size=14))+
theme(plot.title = element_text(size=18, face="bold"))
)
dev.off()
saveFile = paste("../Zona4/heatMap/", type, region,"_",year,".png",sep="")
png(saveFile, width = 800, height = 800)
if (type == 'GAModel'){
p1<- ggplot(data, aes(x=gen, y=maxs, group=1)) +
geom_line(color='orange') +
geom_point(color='orange')+
geom_errorbar(aes(ymin=data$maxs+data$stds, ymax=data$maxs-data$stds), width=0.2, color='black')
print(p1 +
ggtitle(paste("Convergency Analysis in ",region,"year of", year, "(GAModel)"))+
theme(axis.text=element_text(size=14))+
theme(plot.title = element_text(size=18, face="bold"))
)
dev.off()
}
plotConvergencyData(createData(modelName = 'GAModel','200EastJapan',2006),'GAModel', 'EastJapan', 2006)
library(ggplot2)
library(gridExtra)
loadData = function(type,region, year, i){
setwd("~/Documents/estudos/master-unb/earthquakemodels/Zona4/")
file = paste(type,'/',region, type,year,'_',i,'logbook.txt',sep="")
data = read.csv2(file, sep='\t', header=T)
data$std = as.numeric(levels(data$std))[data$std]
data$max = as.numeric(levels(data$max))[data$max]
return(data)
}
chooseRegion = function(i){
if (i==1) {
region="Kanto"
}
else if (i==2) {
region="Kansai"
}
else if (i==3) {
region = "Tohoku"
}
else{
region = "EastJapan"
}
return(region)
}
createData = function(modelName, region, year){
data1 = loadData(modelName, region, year, 0)
data2 = loadData(modelName, region, year, 1)
data3 = loadData(modelName, region, year, 2)
data4 = loadData(modelName, region, year, 3)
data5 = loadData(modelName, region, year, 4)
data6 = loadData(modelName, region, year, 5)
data7 = loadData(modelName, region, year, 6)
data8 = loadData(modelName, region, year, 7)
data9 = loadData(modelName, region, year, 8)
data10 = loadData(modelName, region, year, 9)
data1$std = pmin(data1$std, 500)
data2$std = pmin(data1$std, 500)
data3$std = pmin(data1$std, 500)
data4$std = pmin(data1$std, 500)
data5$std = pmin(data1$std, 500)
data6$std = pmin(data1$std, 500)
data7$std = pmin(data1$std, 500)
data8$std = pmin(data1$std, 500)
data9$std = pmin(data1$std, 500)
data10$std = pmin(data1$std, 500)
maxs = c(rep(0,length(data1$max)))
for (i in 1:length(data1$max)){
maxs[i] = ((data1$max[i] + data2$max[i] + data3$max[i] + data4$max[i] + data5$max[i] +
data6$max[i] + data7$max[i] + data8$max[i] + data9$max[i] + data10$max[i])/10)
}
stds = c(rep(0,length(data1$std)))
for (i in 1:length(data1$std)){
stds[i] = ((data1$std[i] + data2$std[i] + data3$std[i] + data4$std[i] + data5$std[i] +
data6$std[i] + data7$std[i] + data8$std[i] + data9$std[i] + data10$std[i])/10)
}
gen = c(1:200)
data = data.frame(
setNames(replicate(3,numeric(0), simplify = F),
c("maxs", "stds", "gen")))
data = data.frame(maxs, stds, gen)
return (data)
}
plotConvergencyData = function(data, type, region, year){
saveFile = paste("../Zona4/heatMap/", type, region,"_",year,".png",sep="")
png(saveFile, width = 800, height = 800)
if (type == 'GAModel'){
p1<- ggplot(data, aes(x=gen, y=maxs, group=1)) +
geom_line(color='orange') +
geom_point(color='orange')+
geom_errorbar(aes(ymin=data$maxs+data$stds, ymax=data$maxs-data$stds), width=0.2, color='black')
print(p1 +
ggtitle(paste("Convergency Analysis in ",region,"year of", year, "(GAModel)"))+
theme(axis.text=element_text(size=14))+
theme(plot.title = element_text(size=18, face="bold"))
)
dev.off()
}
else if(type=='ReducedGAModel'){
p1<- ggplot(data, aes(x=gen, y=maxs, group=1)) +
geom_line(color='orange') +
geom_point(color='orange')+
geom_errorbar(aes(ymin=data$maxs+data$stds, ymax=data$maxs-data$stds), width=0.2, color='black')
print(p1 +
ggtitle(paste("Convergency Analysis in ",region,"year of", year, "(ReducedGAModel)"))+
theme(axis.text=element_text(size=14))+
theme(plot.title = element_text(size=18, face="bold"))
)
dev.off()
}
}
plotConvergencyData(createData(modelName = 'GAModel','200EastJapan',2006),'GAModel', 'EastJapan', 2006)
