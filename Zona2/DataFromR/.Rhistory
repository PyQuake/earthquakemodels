quakes=c(0.0009118819655545165, 0.0010722457480732011, 0.0012608111440847705, 0.0014825376961437237, 0.0017432571331550376, 0.0020498267532762363, 0.0024103097807736365, 0.002834187440478855, 0.0033326083277104117, 0.00391868163244994, 0.004607821929992753, 0.005418154606565472, 0.006370992583190564, 0.0074913968763247515, 0.008808835738826609, 0.010357959717613703, 0.01217951301314644, 0.014321405110810632, 0.016839970869653588, 0.019801452210629476, 0.023283740374897006, 0.027378424576081903, 0.032193200929020456, 0.03785470501329344, 0.04451184257206647, 0.05233970594843238, 0.06154417926719389, 0.07236735348502549, 0.08509389373266416, 0.10005852641943402, 0.11765484302177923, 0.1383456521081737, 0.1626751518736282, 0.19128324333905475, 0.2249223606733244, 0.2644772612998241, 0.31098829629592817, 0.36567877313053676, 0.42998713041924, 0.5056047709396918, 0.5945205479701945, 0.6990730750065262, 0.8220122346781872, 0.9665715046375067, 1.1365530026970612, 1.3364274880254718, 1.5714519485776512, 1.8478078674788705, 2.172763804968548, 2.554866572043848, 3.004166023946432, 3.5324793858860044, 4.15370206314937, 4.884173110350356, 5.743104972190109, 6.753088798531288, 7.940688624303146, 9.337140042028006, 10.979171743067036, 12.909971535307495, 15.180322244953894, 17.849937378282036, 20.98903167319145, 24.68016784833302, 29.02042812198362, 34.123967614754356, 40.125016794315094, 47.18141193077247, 55.47874641878364, 65.23525215217744, 76.70753933829562, 90.19734571746842, 106.05947270185597, 124.71111716558241, 146.6428443257332, 172.4314903168543, 202.75533381531605, 238.4119357491972, 280.3391163038581, 329.63962094876985, 387.6101242377833, 455.7753342247026, 535.9280944896187, 630.1765385172666, 740.9995366557454, 871.3118939907725, 1024.541013933847, 1204.7170438875164, 1416.578873949096, 1665.6987765720148, 1958.6289653880597, 2303.0739278995034, 2708.0930646400207, 3184.3389645073357, 3744.337583253458, 4402.817694231691, 5177.0982764316595, 6087.544028667466, 7158.100990601122, 8416.92635820832)
plot(quakes)
quakes=c(0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562)
plot(quasi())
plot(quakes)
quakes=c(0.0009118819655545165, 0.0010722457480732011, 0.0012608111440847705, 0.0014825376961437237, 0.0017432571331550376, 0.0020498267532762363, 0.0024103097807736365, 0.002834187440478855, 0.0033326083277104117, 0.00391868163244994, 0.004607821929992753, 0.005418154606565472, 0.006370992583190564, 0.0074913968763247515, 0.008808835738826609, 0.010357959717613703, 0.01217951301314644, 0.014321405110810632, 0.016839970869653588, 0.019801452210629476, 0.023283740374897006, 0.027378424576081903, 0.032193200929020456, 0.03785470501329344, 0.04451184257206647, 0.05233970594843238, 0.06154417926719389, 0.07236735348502549, 0.08509389373266416, 0.10005852641943402, 0.11765484302177923, 0.1383456521081737, 0.1626751518736282, 0.19128324333905475, 0.2249223606733244, 0.2644772612998241, 0.31098829629592817, 0.36567877313053676, 0.42998713041924, 0.5056047709396918, 0.5945205479701945, 0.6990730750065262, 0.8220122346781872, 0.9665715046375067, 1.1365530026970612, 1.3364274880254718, 1.5714519485776512, 1.8478078674788705, 2.172763804968548, 2.554866572043848, 3.004166023946432, 3.5324793858860044, 4.15370206314937, 4.884173110350356, 5.743104972190109, 6.753088798531288, 7.940688624303146, 9.337140042028006, 10.979171743067036, 12.909971535307495, 15.180322244953894, 17.849937378282036, 20.98903167319145, 24.68016784833302, 29.02042812198362, 34.123967614754356, 40.125016794315094, 47.18141193077247, 55.47874641878364, 65.23525215217744, 76.70753933829562, 90.19734571746842, 106.05947270185597, 124.71111716558241, 146.6428443257332, 172.4314903168543, 202.75533381531605, 238.4119357491972, 280.3391163038581, 329.63962094876985, 387.6101242377833, 455.7753342247026, 535.9280944896187, 630.1765385172666, 740.9995366557454, 871.3118939907725, 1024.541013933847, 1204.7170438875164, 1416.578873949096, 1665.6987765720148, 1958.6289653880597, 2303.0739278995034, 2708.0930646400207, 3184.3389645073357, 3744.337583253458, 4402.817694231691, 5177.0982764316595, 6087.544028667466, 7158.100990601122, 8416.92635820832)
plot(quakes)
quakes=c(0.0009118819655545165, 0.004607821929992753, 0.023283740374897006, 0.11765484302177923, 0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562, 387.6101242377833, 1958.6289653880597)
plot(quakes)
plot(0.0009118819655545165, 0.004607821929992753, 0.023283740374897006, 0.11765484302177923, 0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562)
quakes=c(0.0009118819655545165, 0.004607821929992753, 0.023283740374897006, 0.11765484302177923, 0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562)
plot(quakes)
omori=c(88.54674932955562, 14.60476702669664, 0.9041698686485347, 0.0463769533904781, 0.0023297930647788205, 0.00011679357760072451, 5.853681979362953e-06, 2.9337975428414e-07)
plot(omori)
poisson()
poisson(5)
?poisson
ppois(10*(15:25), lambda = 100)
plot(ppois(10*(15:25), lambda = 100))
?levelplot
options(scipen=999)
library(grid)
library(latticeExtra)
library(png)
library(grDevices)
library(RColorBrewer)
?levelplot
datafilename="http://personality-project.org/R/datasets/R.appendix1.data"
data.ex1=read.table(datafilename,header=T)   #read the data into a table
aov.ex1 = aov(Alertness~Dosage,data=data.ex1)  #do the analysis of variance
summary(aov.ex1)                                    #show the summary table
print(model.tables(aov.ex1,"means"),digits=3)       #report the means and the number of subjects/cell
boxplot(Alertness~Dosage,data=data.ex1)
datafilename="http://personality-project.org/R/datasets/R.appendix1.data"
data.ex1=read.table(datafilename,header=T)   #read the data into a table
version
?aov
a = c(-2025.7, -2025.7, -2025.3, -2025.3, -2025.7, -2025.3, -2025.3, -2025.7, -2025.3, -2025.3)
b = c(-2031.46,-2031.46,-2031.46,-2031.46,-2031.46,-2031.46,-2031.46,-2031.46,-2031.46,-2031.4)
`length(a)
))
''
'
`
length(a)
length(b)
t.test(a,b)
t.test(a,b)
?t.test
hist(a)
plot(a)
> kruskal.test(a,b)
a
b
?> kruskal.test
kruskal.test(a,b)
?kruskal.test
save(finalData,file="../DataFromR/data.Rda")
#!/usr/bin/env Rscript
#region(kanto), year(2000~2005)=>2005~2010, model (listas, ga), depth(25,60,100)
setwd("~/Documents/estudos/unb/earthquakemodels/Zona2/dataForR")
loadData = function(region, year, depth, type){
file = paste(type,'_',region,"_",depth,'_',year,".txt",sep="")
data = read.csv2(file, sep='\n', header=F)
return(data)
}
chooseRegion = function(i){
if (i==1) {
region="Kanto"
}
else if (i==2) {
region="Kansai"
}
else if (i==3) {
region = "Tohoku"
}
else{
region = "EastJapan"
}
return(region)
}
convertToNumeric = function(model){
values = rep(0, length(model$V1))
for (k in 1:length(model$V1)){
values[k] = as.numeric(levels(model$V1[k]))[model$V1[k]]
}
return(values)
}
loadRI = function(year){
file = paste("ri_",year,sep="")
dataRI = read.csv2(file, sep='', header=F)
return(dataRI)
}
finalData = data.frame(
setNames(replicate(5,numeric(0), simplify = F),
c("loglikeValues", "model", "depths", "years", "regions")))
for (i in 1:4) {
region = chooseRegion(i)
for (year in 2000:2005) {
gaModel25 = loadData(region, year+5, '25', 'gaModel')
gaModel60 = loadData(region, year+5, '60', 'gaModel')
gaModel100 = loadData(region, year+5, '100', 'gaModel')
lista25 = loadData(region, year+5, '25', 'listaGA_New')
lista60 = loadData(region, year+5, '60', 'listaGA_New')
lista100 = loadData(region, year+5, '100', 'listaGA_New')
valuesGA25 = convertToNumeric(gaModel25)
valuesGA60 = convertToNumeric(gaModel60)
valuesGA100 = convertToNumeric(gaModel100)
valuesLista25 = convertToNumeric(lista25)
valuesLista60 = convertToNumeric(lista60)
valuesLista100 = convertToNumeric(lista100)
loglikeGA = c(valuesGA25, valuesGA60, valuesGA100)
loglikeLista = c(valuesLista25, valuesLista60, valuesLista100)
loglikeValues = c(loglikeGA, loglikeLista)
nameGa = c(rep("gaModel",30))
nameLista = c(rep("lista",30))
years = c(rep(toString(year+5),60))
regions = c(rep(region, 60))
depth25 = c(rep('25',10))
depth60 = c(rep('60',10))
depth100 = c(rep('100',10))
depthsAmodel = c(depth25, depth60, depth100)
model = c(nameGa, nameLista)
depths= c(depthsAmodel, depthsAmodel)
data = data.frame(loglikeValues, model, depths, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
rm(data)
gaModel25 = loadData(region, year+5, '25', 'hybrid_gaModel')
gaModel60 = loadData(region, year+5, '60', 'hybrid_gaModel')
gaModel100 = loadData(region, year+5, '100', 'hybrid_gaModel')
lista25 = loadData(region, year+5, '25', 'hybrid_listaGA_New')
lista60 = loadData(region, year+5, '60', 'hybrid_listaGA_New')
lista100 = loadData(region, year+5, '100', 'hybrid_listaGA_New')
valuesGA25 = convertToNumeric(gaModel25)
valuesGA60 = convertToNumeric(gaModel60)
valuesGA100 = convertToNumeric(gaModel100)
valuesLista25 = convertToNumeric(lista25)
valuesLista60 = convertToNumeric(lista60)
valuesLista100 = convertToNumeric(lista100)
loglikeGA = c(valuesGA25, valuesGA60, valuesGA100)
loglikeLista = c(valuesLista25, valuesLista60, valuesLista100)
loglikeValues = c(loglikeGA, loglikeLista)
nameGa = c(rep("hybrid_gaModel",30))
nameLista = c(rep("hybrid_listaGA_New",30))
years = c(rep(toString(year+5),60))
regions = c(rep(region, 60))
depth25 = c(rep('25',10))
depth60 = c(rep('60',10))
depth100 = c(rep('100',10))
depthsAmodel = c(depth25, depth60, depth100)
model = c(nameGa, nameLista)
depths= c(depthsAmodel, depthsAmodel)
data = data.frame(loglikeValues, model, depths, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
rm(data)
gaModel25 = loadData(region, year+5, '25', 'clustered_gaModel')
gaModel60 = loadData(region, year+5, '60', 'clustered_gaModel')
gaModel100 = loadData(region, year+5, '100', 'clustered_gaModel')
lista25 = loadData(region, year+5, '25', 'clustered_listaGA_New')
lista60 = loadData(region, year+5, '60', 'clustered_listaGA_New')
lista100 = loadData(region, year+5, '100', 'clustered_listaGA_New')
valuesGA25 = convertToNumeric(gaModel25)
valuesGA60 = convertToNumeric(gaModel60)
valuesGA100 = convertToNumeric(gaModel100)
valuesLista25 = convertToNumeric(lista25)
valuesLista60 = convertToNumeric(lista60)
valuesLista100 = convertToNumeric(lista100)
loglikeGA = c(valuesGA25, valuesGA60,valuesGA100)
loglikeLista = c(valuesLista25, valuesLista60, valuesLista100)
loglikeValues = c(loglikeGA, loglikeLista)
nameGa = c(rep("gaModelCluster",30))
nameLista = c(rep("listaCluster",30))
years = c(rep(toString(year+5),60))
regions = c(rep(region, 60))
depth25 = c(rep('25',10))
depth60 = c(rep('60',10))
depth100 = c(rep('100',10))
depthsAmodel = c(depth25, depth60, depth100)
model = c(nameGa, nameLista)
depths = c(depthsAmodel, depthsAmodel)
data = data.frame(loglikeValues, model,depths, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
rm(data)
}
}
# for (year in 2005:2010){
#     riData = loadRI(year)
#     loglikeRI = as.numeric(as.character(riData[9,9]))
#     model = c("RI")
#     depths= c('RI')
#     years = year
#     regions = region
#     data = data.frame(loglikeValues, model, depths, years, regions, clustered)
#     print(data)
#     finalData=rbind(finalData, data)
#     if (dim(finalData)[1]==0) {
#         finalData = merge(finalData, data, all.y=T)
#     }
#     else{
#         finalData=rbind(finalData, data)
#     }
#     rm(data)
# }
save(finalData,file="../DataFromR/data.Rda")
summary(finalData)
setwd("~/Documents/estudos/unb/earthquakemodels/Zona2/dataFromR")
