region="Kansai"
}
else if (i==3) {
region = "Tohoku"
}
else{
region = "EastJapan"
}
return(region)
}
convertToNumeric = function(model){
values = rep(0, length(model$V1))
for (k in 1:length(model$V1)){
values[k] = as.numeric(levels(model$V1[k]))[model$V1[k]]
}
return(values)
}
loadRI = function(year){
file = paste("ri_",year,sep="")
dataRI = read.csv2(file, sep='', header=F)
return(dataRI)
}
finalData = data.frame(
setNames(replicate(5,numeric(0), simplify = F),
c("loglikeValues", "model", "depths", "years", "regions")))
for (i in 1:4) {
region = chooseRegion(i)
for (year in 2000:2005) {
gaModel25 = loadData(region, year+5, '25', 'gaModel')
gaModel60 = loadData(region, year+5, '60', 'gaModel')
gaModel100 = loadData(region, year+5, '100', 'gaModel')
lista25 = loadData(region, year+5, '25', 'listaGA_New')
lista60 = loadData(region, year+5, '60', 'listaGA_New')
lista100 = loadData(region, year+5, '100', 'listaGA_New')
valuesGA25 = convertToNumeric(gaModel25)
valuesGA60 = convertToNumeric(gaModel60)
valuesGA100 = convertToNumeric(gaModel100)
valuesLista25 = convertToNumeric(lista25)
valuesLista60 = convertToNumeric(lista60)
valuesLista100 = convertToNumeric(lista100)
loglikeGA = c(valuesGA25, valuesGA60, valuesGA100)
loglikeLista = c(valuesLista25, valuesLista60, valuesLista100)
loglikeValues = c(loglikeGA, loglikeLista)
nameGa = c(rep("GAModel",30))
nameLista = c(rep("ReducedGAModel",30))
years = c(rep(toString(year+5),60))
regions = c(rep(region, 60))
depth25 = c(rep('25',10))
depth60 = c(rep('60',10))
depth100 = c(rep('100',10))
depthsAmodel = c(depth25, depth60, depth100)
model = c(nameGa, nameLista)
depths= c(depthsAmodel, depthsAmodel)
data = data.frame(loglikeValues, model, depths, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
rm(data)
gaModel25 = loadData(region, year+5, '25', 'hybrid_gaModel')
gaModel60 = loadData(region, year+5, '60', 'hybrid_gaModel')
gaModel100 = loadData(region, year+5, '100', 'hybrid_gaModel')
lista25 = loadData(region, year+5, '25', 'hybrid_listaGA_New')
lista60 = loadData(region, year+5, '60', 'hybrid_listaGA_New')
lista100 = loadData(region, year+5, '100', 'hybrid_listaGA_New')
valuesGA25 = convertToNumeric(gaModel25)
valuesGA60 = convertToNumeric(gaModel60)
valuesGA100 = convertToNumeric(gaModel100)
valuesLista25 = convertToNumeric(lista25)
valuesLista60 = convertToNumeric(lista60)
valuesLista100 = convertToNumeric(lista100)
loglikeGA = c(valuesGA25, valuesGA60, valuesGA100)
loglikeLista = c(valuesLista25, valuesLista60, valuesLista100)
loglikeValues = c(loglikeGA, loglikeLista)
nameGa = c(rep("EMP-GAModel",30))
nameLista = c(rep("EMP-ReducedGAModel",30))
years = c(rep(toString(year+5),60))
regions = c(rep(region, 60))
depth25 = c(rep('25',10))
depth60 = c(rep('60',10))
depth100 = c(rep('100',10))
depthsAmodel = c(depth25, depth60, depth100)
model = c(nameGa, nameLista)
depths= c(depthsAmodel, depthsAmodel)
data = data.frame(loglikeValues, model, depths, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
rm(data)
gaModel25 = loadData(region, year+5, '25', 'clustered_hybrid_gaModel')
gaModel60 = loadData(region, year+5, '60', 'clustered_hybrid_gaModel')
gaModel100 = loadData(region, year+5, '100', 'clustered_hybrid_gaModel')
lista25 = loadData(region, year+5, '25', 'clustered_hybrid_listaGA_New')
lista60 = loadData(region, year+5, '60', 'clustered_hybrid_listaGA_New')
lista100 = loadData(region, year+5, '100', 'clustered_hybrid_listaGA_New')
valuesGA25 = convertToNumeric(gaModel25)
valuesGA60 = convertToNumeric(gaModel60)
valuesGA100 = convertToNumeric(gaModel100)
valuesLista25 = convertToNumeric(lista25)
valuesLista60 = convertToNumeric(lista60)
valuesLista100 = convertToNumeric(lista100)
loglikeGA = c(valuesGA25, valuesGA60, valuesGA100)
loglikeLista = c(valuesLista25, valuesLista60, valuesLista100)
loglikeValues = c(loglikeGA, loglikeLista)
nameGa = c(rep("EMP-GAModelWindow",30))
nameLista = c(rep("EMP-ReducedGAModelWindow",30))
years = c(rep(toString(year+5),60))
regions = c(rep(region, 60))
depth25 = c(rep('25',10))
depth60 = c(rep('60',10))
depth100 = c(rep('100',10))
depthsAmodel = c(depth25, depth60, depth100)
model = c(nameGa, nameLista)
depths= c(depthsAmodel, depthsAmodel)
data = data.frame(loglikeValues, model, depths, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
rm(data)
gaModel25 = loadData(region, year+5, '25', 'clusteredII_hybrid_gaModel')
gaModel60 = loadData(region, year+5, '60', 'clusteredII_hybrid_gaModel')
gaModel100 = loadData(region, year+5, '100', 'clusteredII_hybrid_gaModel')
lista25 = loadData(region, year+5, '25', 'clusteredII_hybrid_listaGA_New')
lista60 = loadData(region, year+5, '60', 'clusteredII_hybrid_listaGA_New')
lista100 = loadData(region, year+5, '100', 'clusteredII_hybrid_listaGA_New')
valuesGA25 = convertToNumeric(gaModel25)
valuesGA60 = convertToNumeric(gaModel60)
valuesGA100 = convertToNumeric(gaModel100)
valuesLista25 = convertToNumeric(lista25)
valuesLista60 = convertToNumeric(lista60)
valuesLista100 = convertToNumeric(lista100)
loglikeGA = c(valuesGA25, valuesGA60, valuesGA100)
loglikeLista = c(valuesLista25, valuesLista60, valuesLista100)
loglikeValues = c(loglikeGA, loglikeLista)
nameGa = c(rep("EMP-GAModelSLC",30))
nameLista = c(rep("EMP-ReducedGAModelSLC",30))
years = c(rep(toString(year+5),60))
regions = c(rep(region, 60))
depth25 = c(rep('25',10))
depth60 = c(rep('60',10))
depth100 = c(rep('100',10))
depthsAmodel = c(depth25, depth60, depth100)
model = c(nameGa, nameLista)
depths= c(depthsAmodel, depthsAmodel)
data = data.frame(loglikeValues, model, depths, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
rm(data)
gaModel25 = loadData(region, year+5, '25', 'clustered_gaModel')
gaModel60 = loadData(region, year+5, '60', 'clustered_gaModel')
gaModel100 = loadData(region, year+5, '100', 'clustered_gaModel')
lista25 = loadData(region, year+5, '25', 'clustered_listaGA_New')
lista60 = loadData(region, year+5, '60', 'clustered_listaGA_New')
lista100 = loadData(region, year+5, '100', 'clustered_listaGA_New')
valuesGA25 = convertToNumeric(gaModel25)
valuesGA60 = convertToNumeric(gaModel60)
valuesGA100 = convertToNumeric(gaModel100)
valuesLista25 = convertToNumeric(lista25)
valuesLista60 = convertToNumeric(lista60)
valuesLista100 = convertToNumeric(lista100)
loglikeGA = c(valuesGA25, valuesGA60,valuesGA100)
loglikeLista = c(valuesLista25, valuesLista60, valuesLista100)
loglikeValues = c(loglikeGA, loglikeLista)
nameGa = c(rep("GAModelWindow",30))
nameLista = c(rep("ReducedGAModelWindow",30))
years = c(rep(toString(year+5),60))
regions = c(rep(region, 60))
depth25 = c(rep('25',10))
depth60 = c(rep('60',10))
depth100 = c(rep('100',10))
depthsAmodel = c(depth25, depth60, depth100)
model = c(nameGa, nameLista)
depths = c(depthsAmodel, depthsAmodel)
data = data.frame(loglikeValues, model,depths, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
rm(data)
gaModel25 = loadData(region, year+5, '25', 'clusteredII_gaModel')
gaModel60 = loadData(region, year+5, '60', 'clusteredII_gaModel')
gaModel100 = loadData(region, year+5, '100', 'clusteredII_gaModel')
lista25 = loadData(region, year+5, '25', 'clusteredII_listaGA_New')
lista60 = loadData(region, year+5, '60', 'clusteredII_listaGA_New')
lista100 = loadData(region, year+5, '100', 'clusteredII_listaGA_New')
valuesGA25 = convertToNumeric(gaModel25)
valuesGA60 = convertToNumeric(gaModel60)
valuesGA100 = convertToNumeric(gaModel100)
valuesLista25 = convertToNumeric(lista25)
valuesLista60 = convertToNumeric(lista60)
valuesLista100 = convertToNumeric(lista100)
loglikeGA = c(valuesGA25, valuesGA60,valuesGA100)
loglikeLista = c(valuesLista25, valuesLista60, valuesLista100)
loglikeValues = c(loglikeGA, loglikeLista)
nameGa = c(rep("GAModelSLC",30))
nameLista = c(rep("ReducedGAModelSLC",30))
years = c(rep(toString(year+5),60))
regions = c(rep(region, 60))
depth25 = c(rep('25',10))
depth60 = c(rep('60',10))
depth100 = c(rep('100',10))
depthsAmodel = c(depth25, depth60, depth100)
model = c(nameGa, nameLista)
depths = c(depthsAmodel, depthsAmodel)
data = data.frame(loglikeValues, model,depths, years, regions)
if (dim(finalData)[1]==0) {
finalData = merge(finalData, data, all.y=T)
}
else{
finalData=rbind(finalData, data)
}
rm(data)
}
}
# for (year in 2005:2010){
#     riData = loadRI(year)
#     loglikeRI = as.numeric(as.character(riData[9,9]))
#     model = c("RI")
#     depths= c('RI')
#     years = year
#     regions = region
#     data = data.frame(loglikeValues, model, depths, years, regions, clustered)
#     print(data)
#     finalData=rbind(finalData, data)
#     if (dim(finalData)[1]==0) {
#         finalData = merge(finalData, data, all.y=T)
#     }
#     else{
#         finalData=rbind(finalData, data)
#     }
#     rm(data)
# }
save(finalData,file="../DataFromR/newdata.Rda")
summary(finalData)
#!/usr/bin/env Rscript
options(scipen=999)
library(grid)
library(latticeExtra)
library(png)
library(grDevices)
library(RColorBrewer)
# ainda tem que por os demais modelos, hybrid e clustered
loadData = function(region, year, depth, type){
file = paste(type,'_',region,"_",depth,'_',year,".txt",sep="")
data = read.csv2(file, sep='\n', header=F)
return(data)
}
plotMatrixReal = function(modelData, fileToSave, r, c){
# TODO -- hardcoded map is BAD
matrixData = matrix(nrow = r, ncol = c)
k = 1
for (i in 1:r){
for (j in 1:c){
value = as.numeric(levels(modelData$V1[k]))[modelData$V1[k]]
value = value + 1
if (value > 12){
value = 12
}
matrixData[i,j] = value
k = k + 1
}
}
png(fileToSave, width = 800, height = 800)
jBrewColors <- rev(heat.colors(16))
p = levelplot((matrixData), col.regions = jBrewColors, alpha.regions=0.6)
print( p+ layer(grid.raster(as.raster(imagem)), under=T))
dev.off()
}
plotRealByYears = function(){
year=2005
while(year<=2010){
setwd("~/Documents/estudos/unb/earthquakemodels/Zona2/")
region="EastJapan"
imagem <<- readPNG("../data/coast.png")
file = paste("realData/",region,"real_", year,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
saveFile = paste("./heatMap/real/real",region,"_",year,".png",sep="")
plotMatrixReal(raw_data, saveFile, 40, 40)
#20X40!
# a imagem tá uma merda
region="Tohoku"
imagem <<- readPNG("../data/touhoku.png")
file = paste("realData/",region,"real_", year,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
saveFile = paste("./heatMap/real/real",region,"_",year,".png",sep="")
plotMatrixReal(raw_data, saveFile, 20, 40)
region="Kansai"
imagem <<- readPNG("../data/kansai.png")
file = paste("realData/",region,"real_", year,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
saveFile = paste("./heatMap/real/real",region,"_",year,".png",sep="")
plotMatrixReal(raw_data, saveFile, 40, 40)
region="Kanto"
imagem <<- readPNG("../data/kantomap.png")
file = paste("realData/",region,"real_", year,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
saveFile = paste("./heatMap/real/real",region,"_",year,".png",sep="")
plotMatrixReal(raw_data, saveFile, 45, 45)
year=year+1
}
}
calcMedia = function(type, year, depth, region,r,c){
if (type=='hybrid_ListaGA_New') {
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/hybrid_ListaGA_New',region,'_',depth,'_',year,'_',i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
else if(type=='hybrid_gaModel'){
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/hybrid_gaModel',region,'_',depth,'_',year,'_',i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
else if (type=='clusteredII_gaModel') {
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/',region,'_',depth,'_',year,i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
else if (type=='clusteredII_hybrid_gaModel') {
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/hybrid_gaModel',region,'_',depth,'_',year,'_',i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
else if (type=='clusteredII_hybrid_ListaGA_New') {
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/hybrid_ListaGA_New',region,'_',depth,'_',year,i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
else if (type=='clusteredII_listaGA_new') {
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/',region,'_',depth,'_',year,i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
else if (type=='clustered_gaModel') {
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/',region,'_',depth,'_',year,i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
else if (type=='clustered_hybrid_gaModel') {
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/hybrid_gaModel',region,'_',depth,'_',year,'_',i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
else if (type=='clustered_hybrid_ListaGA_New') {
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/hybrid_ListaGA_New',region,'_',depth,'_',year,'_',i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
else if (type=='clustered_listaGA_new') {
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/',region,'_',depth,'_',year,i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
else{
soma = rep(0, r*c)
for(i in 1:10){
file = paste(type,'/',region,'_',depth,'_',year,i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
}
plotMatrixModel = function(modelData, fileToSave, r, c){
# TODO -- hardcoded map is BAD
matrixData = matrix(nrow = r, ncol = c)
k = 1
for (i in 1:r){
for (j in 1:c){
if(is.na(modelData[k])==T){
value=0
}
else{
value = modelData[k]
if (value > 12){
value = 12
}
}
matrixData[i,j] = value
k = k + 1
}
}
png(fileToSave, width = 800, height = 800)
jBrewColors <- rev(heat.colors(16))
# imageData=grid.raster(as.raster(readPNG("../data/touhoku.png")))
p = levelplot((matrixData), col.regions = jBrewColors, alpha.regions=0.6)
grid.raster(as.raster(readPNG(imagePath)))
print( p+ layer(grid.raster(as.raster(readPNG(imagePath))), under=T))
dev.off()
}
plotModelsByYears= function(type, depth){
year=2005
#modelo
while(year<=2010){
setwd("~/Documents/estudos/unb/earthquakemodels/Zona2/")
region="EastJapan"
saveFile = paste("./heatMap/",type,region,"_",depth,'_',year,".png",sep="")
mediaEastJapan=calcMedia(type=type,year=year, region=region, depth=depth, 40,40)
imagePath<<-"../data/coast.png"
plotMatrixModel(mediaEastJapan, saveFile, 40, 40)
#20X40!
# a imagem tá uma merda
#           region="Tohoku"
#           saveFile = paste("./heatMap/",type,region,"_",depth,'_',year,".png",sep="")
#           mediaTouhoku=calcMedia(type=type,year=year, region=region, depth=depth, 20,40)
#           imagePath<<-"../data/touhoku.png"
#           plotMatrixModel(mediaTouhoku, saveFile, 20, 40)
#
#           region="Kansai"
#           saveFile = paste("./heatMap/",type,region,"_",depth,'_',year,".png",sep="")
#           mediaKansai=calcMedia(type=type,year=year, region=region, depth=depth, 40,40)
#           imagePath<<-"../data/kansai.png"
#           plotMatrixModel(mediaKansai, saveFile, 40, 40)
#
#           region="Kanto"
#           saveFile = paste("./heatMap/",type,region,"_",depth,'_',year,".png",sep="")
#           mediaKanto=calcMedia(type=type,year=year, region=region, depth=depth, 45,45)
#           imagePath<<-"../data/kantomap.png"
#           plotMatrixModel(mediaKanto, saveFile, 45, 45)
year=year+1
}
}
plotRealByYears()
# hybrid_ListaGA_New, hybrid_gaModel
plotModelsByYears('gaModel',25)
plotModelsByYears('gaModel',60)
