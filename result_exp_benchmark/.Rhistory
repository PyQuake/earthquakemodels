scale_color_gradient()
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
# geom_ribbon(aes(ymin = 0, ymax = means40$min, fill = means40$f), alpha = 0.3)+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function number"),
bottom = textGrob("Tournament size")
)
)
}
k_min_plot(means10, means20, means40, k_interval = c(2,4,8,6,10, 12), f_interval = c(2,10))
#function to plot k versus min value given an interval (function goes in graph)
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p10 <- p10 + guides(fill=guide_legend(title="New Legend Title"))
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
# geom_ribbon(aes(ymin = 0, ymax = means40$min, fill = means40$f), alpha = 0.3)+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function number"),
bottom = textGrob("Tournament size")
)
)
}
k_min_plot(means10, means20, means40, k_interval = c(2,4,8,6,10, 12), f_interval = c(2,10))
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p10 <- p10 + scale_fill_discrete(name = "New Legend Title")
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
# geom_ribbon(aes(ymin = 0, ymax = means40$min, fill = means40$f), alpha = 0.3)+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function"),
bottom = textGrob("Tournament size")
)
)
}
k_min_plot(means10, means20, means40, k_interval = c(2,4,8,6,10, 12), f_interval = c(2,10))
#function to plot f versus min value given an interval (k goes in graph)
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function Value")
)
)
}
f_min_plot(means10, means20, means40, k_interval = c(2,5,10), f_interval = c(2,5,10))
ction to plot k versus min value given an interval (function goes in graph)
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p10 <- p10 + scale_fill_discrete(name = "New Legend Title")
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
# geom_ribbon(aes(ymin = 0, ymax = means40$min, fill = means40$f), alpha = 0.3)+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank())+textGrob("price"),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function"),
bottom = textGrob("Tournament size")
)
)
}
k_min_plot(means10, means20, means40, k_interval = c(2,4,8,6,10, 12), f_interval = c(2,10))
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
grid.arrange(arrangeGrob(p10+
textGrob("price")+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p20+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p40+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function Value")))
}
f_min_plot(means10, means20, means40, k_interval = c(2,5,10), f_interval = c(2,5,10))
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p10$labels$colour <- "New legend title"
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
grid.arrange(arrangeGrob(p10+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p20+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p40+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function Value")))
}
f_min_plot(means10, means20, means40, k_interval = c(2,5,10), f_interval = c(2,5,10))
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p10 <- p10 + scale_fill_discrete(name = "New Legend Title")
p10$labels$colour <- "Function"
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20$labels$colour <- "Function"
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
# geom_ribbon(aes(ymin = 0, ymax = means40$min, fill = means40$f), alpha = 0.3)+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40$labels$colour <- "Function"
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function"),
bottom = textGrob("Tournament size")
)
)
}
k_min_plot(means10, means20, means40, k_interval = c(2,4,8,6,10, 12), f_interval = c(2,10))
#function to plot f versus min value given an interval (k goes in graph)
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p10$labels$colour <- "Tour. size"
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20$labels$colour <- "Tour. size"
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40$labels$colour <- "Tour. size"
grid.arrange(arrangeGrob(p10+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p20+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p40+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function Value")))
}
f_min_plot(means10, means20, means40, k_interval = c(2,5,10), f_interval = c(2,5,10))
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient(breaks=c(min(f_interval),0.5,max(f_interval)))
p10$labels$colour <- "Tour. size"
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20$labels$colour <- "Tour. size"
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40$labels$colour <- "Tour. size"
grid.arrange(arrangeGrob(p10+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p20+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p40+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function Value")))
}
f_min_plot(means10, means20, means40, k_interval = c(2,5,10), f_interval = c(2,5,10))
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient(breaks=c(min(f_interval),max(f_interval), 1))
p10$labels$colour <- "Tour. size"
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20$labels$colour <- "Tour. size"
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40$labels$colour <- "Tour. size"
grid.arrange(arrangeGrob(p10+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p20+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p40+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function Value")))
}
f_min_plot(means10, means20, means40, k_interval = c(2,5,10), f_interval = c(2,5,10))
?breaks
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient(breaks=c(1,1,1))
p10$labels$colour <- "Tour. size"
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20$labels$colour <- "Tour. size"
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40$labels$colour <- "Tour. size"
grid.arrange(arrangeGrob(p10+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p20+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p40+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function Value")))
}
f_min_plot(means10, means20, means40, k_interval = c(2,5,10), f_interval = c(2,5,10))
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient(breaks=c(1,1))
p10$labels$colour <- "Tour. size"
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20$labels$colour <- "Tour. size"
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40$labels$colour <- "Tour. size"
grid.arrange(arrangeGrob(p10+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p20+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p40+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function Value")))
}
f_min_plot(means10, means20, means40, k_interval = c(2,5,10), f_interval = c(2,5,10))
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient(breaks=c(0,10))
p10$labels$colour <- "Tour. size"
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20$labels$colour <- "Tour. size"
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40$labels$colour <- "Tour. size"
grid.arrange(arrangeGrob(p10+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p20+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p40+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function Value")))
}
f_min_plot(means10, means20, means40, k_interval = c(2,5,10), f_interval = c(2,5,10))
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient(breaks=c(0,10,1))
p10$labels$colour <- "Tour. size"
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20$labels$colour <- "Tour. size"
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40$labels$colour <- "Tour. size"
grid.arrange(arrangeGrob(p10+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p20+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p40+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function Value")))
}
f_min_plot(means10, means20, means40, k_interval = c(2,5,10), f_interval = c(2,5,10))
