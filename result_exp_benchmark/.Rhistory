k_min_plot(means10, means20, means40, k_interval = NULL, f_interval = c(i-1,i))
}
for (i in 2:24){
k_min_plot(means10, means20, means40, k_interval = NULL, f_interval = c(i-1,i))
}
?discrete_scale
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
summary(p4)
summary(p40)
f_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p10$labels$colour <- "Tour. size"
p10$labels$title <- "10 dimensions"
p20<- ggplot(means10, aes(f, min, color = k, group = means20$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p20$labels$colour <- "Tour. size"
p20$labels$title <- "20 dimensions"
p40<- ggplot(means40, aes(f, min, color = k, group = means40$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p40$labels$colour <- "Tour. size"
p40$labels$title <- "40 dimensions"
grid.arrange(arrangeGrob(p10+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p20+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
p40+
theme(axis.title.y = element_blank(),
axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(" Tournament size"),
bottom = textGrob("Function")))
}
for (i in 2:24){
k_min_plot(means10, means20, means40, k_interval = NULL, f_interval = c(i))
}
library('swirl')
swirl()
str(diamonds)
qplot(price,data = diamonds)
range(diamonds$price)
qplot(price, data = diamnos, binwidth = 18597/30)
qplot(price, data = diamonds, binwidth = 18597/30)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = density())
qplot(price, data = diamonds, geom = density
)
qplot(price, data = diamonds, geom = density)
qplot(price, data = diamonds, geom = 'density')
qplot(price, data = diamonds, geom = 'density', color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth('lm'))
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method  = 'lm'))
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method  = 'lm'))
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method  = 'lm')
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) + geom_smooth(method  = 'lm')
g <= ggplot(diamnos, aes(depth, price))
g <- ggplot(diamnos, aes(depth, price))
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile (diamonds$carat, seq = c(0,1, length(4), na.rm = TRUE))
cutpoints <- quantile (diamonds$carat, seq = c(0,1, length = 4), na.rm = TRUE))
cutpoints <- quantile (diamonds$carat, seq = c(0,1, length = 4), na.rm = TRUE)
cutpoints <- quantile (diamonds$carat, seqc(0,1, length = 4), na.rm = TRUE)
cutpoints <- quantile (diamonds$carat, seq(0,1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid()
g + geom_point(alpha = 1/3) + facet_grid(cut~car2)
diamonds[myd, ]
g + geom_point(alpha = 1/3) + facet_grid(cut~car2, method = 'lm', size = 3, color = 'pink')
g + geom_point(alpha = 1/3) + facet_grid(cut~car2) + geom_smmoth(method = 'lm', size = 3, color = 'pink')
g + geom_point(alpha = 1/3) + facet_grid(cut~car2) + geom_smooth(method = 'lm', size = 3, color = 'pink')
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
?ggplot
?aes
p10<- ggplot(means10, aes(f, min, color = k, group = means10$k))+
geom_point(col = 'red')+
geom_line()+
scale_color_gradient()
p10
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
# geom_smooth(alpha  = 1/2)+
scale_color_gradient(guide = 'legend')
p10
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f, fill = f))+
geom_point(col = 'red')+
geom_line()+
# geom_smooth(alpha  = 1/2)+
# scale_color_gradient(guide = 'legend')
p10$labels$colour <- "Function"
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f, fill = f))+
geom_point(col = 'red')+
geom_line()
p10$labels$colour <- "Function"
p10$labels$title <- "10 dimensions"
p10
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f, fill = f))+
geom_point(col = 'red')+
geom_line()
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f, fill = f))+
geom_point(col = 'red')+
geom_line()+
# geom_smooth(alpha  = 1/2)+
scale_color_gradient(guide = 'legend')
p10$labels$colour <- "Function"
p10$labels$title <- "10 dimensions"
p10
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f, cut = f))+
geom_point(col = 'red')+
geom_line()+
# geom_smooth(alpha  = 1/2)+
scale_color_gradient(guide = 'legend')
p10$labels$colour <- "Function"
p10$labels$title <- "10 dimensions"
p10
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f, cut = f))+
geom_point(col = 'red')+
geom_line()+
# geom_smooth(alpha  = 1/2)+
# scale_color_gradient(guide = 'legend')
p10$labels$colour <- "Function"
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f, cut = f))+
geom_point(col = 'red')+
geom_line()
p10
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f, cut = means10$f))+
geom_point(col = 'red')+
geom_line()
p10
p10<- ggplot(means10, aes(k, min, color = f,  cut = means10$f))+
geom_point(col = 'red')+
geom_line()
p10
p10<- ggplot(means10, aes(k, min, color = f,  fill = means10$f))+
geom_point(col = 'red')+
geom_line()
p10
p10<- ggplot(means10, aes(k, min, color = f,  shape = means10$f))+
geom_point(col = 'red')+
geom_line()
p10
p10<- ggplot(means10, aes(k, min, color = f,  shape = f))+
geom_point(col = 'red')+
geom_line()
p10
means10$f
p10<- ggplot(means10, aes(k, min, color = f,  facets = f))+
geom_point(col = 'red')+
geom_line()
p10
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = 1/2)
p10
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = 1/2, method = 'lm')
p10
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .3,method = 'lm')
p10
fill = functions?
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'lm')
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'lm')
p10
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p10
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p20$labels$colour <- "Function"
p20$labels$title <- "20 dimensions"
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
# geom_ribbon(aes(ymin = 0, ymax = means40$min, fill = means40$f), alpha = 0.3)+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p40$labels$colour <- "Function"
p40$labels$title <- "40 dimensions"
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function"),
bottom = textGrob("Tournament size")
)
)
}
k_min_plot(means10, means20, means40, k_interval = c(2,3))
k_min_plot(means10, means20, means40, k_interval = c(1))
k_min_plot(means10, means20, means40, f_interval = c(1))
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p20$labels$colour <- "Function"
p20$labels$title <- "20 dimensions"
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p20$labels$colour <- "Function"
p20$labels$title <- "20 dimensions"
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
# geom_ribbon(aes(ymin = 0, ymax = means40$min, fill = means40$f), alpha = 0.3)+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p40$labels$colour <- "Function"
p40$labels$title <- "40 dimensions"
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function"),
bottom = textGrob("Tournament size")
)
)
}
k_min_plot(means10, means20, means40, f_interval = c(1))
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p10$labels$colour <- "Function"
p10$labels$title <- "20 dimensions"
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p20$labels$colour <- "Function"
p20$labels$title <- "20 dimensions"
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
# geom_ribbon(aes(ymin = 0, ymax = means40$min, fill = means40$f), alpha = 0.3)+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p40$labels$colour <- "Function"
p40$labels$title <- "40 dimensions"
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function"),
bottom = textGrob("Tournament size")
)
)
}
k_min_plot(means10, means20, means40, f_interval = c(1))
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'lm')
p10$labels$colour <- "Function"
p10$labels$title <- "20 dimensions"
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'lm')
p20$labels$colour <- "Function"
p20$labels$title <- "20 dimensions"
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'lm')
p40$labels$colour <- "Function"
p40$labels$title <- "40 dimensions"
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function"),
bottom = textGrob("Tournament size")
)
)
}
for (i in 2:24){
k_min_plot(means10, means20, means40, k_interval = NULL, f_interval = c(i))
}
for (i in 2:24){
k_min_plot(means10, means20, means40, k_interval = NULL, f_interval = c(i))
}
k_min_plot <- function(data40, k_interval = NULL, f_interval = NULL){
means40 <- k_subsetting(data40, k_interval)
means40 <- f_subsetting(means40, f_interval)
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
geom_point(col = 'red')+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'loess')
p40$labels$colour <- "Function"
p40$labels$title <- "40 dimensions"
grid.arrange(arrangeGrob(p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(paste("Function", f_interval) ),
bottom = textGrob("Tournament size")
)
)
}
for (i in 1:24){
k_min_plot(means40, k_interval = NULL, f_interval = c(i))
}
k_min_plot <- function(data40, k_interval = NULL, f_interval = NULL){
means40 <- k_subsetting(data40, k_interval)
means40 <- f_subsetting(means40, f_interval)
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'lm')
p40$labels$colour <- "Function"
p40$labels$title <- "40 dimensions"
grid.arrange(arrangeGrob(p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob(paste("Function", f_interval) ),
bottom = textGrob("Tournament size")
)
)
}
for (i in 1:24){
k_min_plot(means40, k_interval = NULL, f_interval = c(i))
}
for (i in 2:24){
k_min_plot(means10, means20, means40, k_interval = NULL, f_interval = c(i))
}
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'lm')
p10$labels$colour <- "Function"
p10$labels$title <- "20 dimensions"
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'lm')
p20$labels$colour <- "Function"
p20$labels$title <- "20 dimensions"
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .1,method = 'lm')
p40$labels$colour <- "Function"
p40$labels$title <- "40 dimensions"
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function"),
bottom = textGrob("Tournament size")
)
)
}
for (i in 2:24){
k_min_plot(means10, means20, means40, k_interval = NULL, f_interval = c(i))
}
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .3,method = 'lm')
p10$labels$colour <- "Function"
p10$labels$title <- "20 dimensions"
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .3,method = 'lm')
p20$labels$colour <- "Function"
p20$labels$title <- "20 dimensions"
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .3,method = 'lm')
p40$labels$colour <- "Function"
p40$labels$title <- "40 dimensions"
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function"),
bottom = textGrob("Tournament size")
)
)
}
k_min_plot(means10, means20, means40, k_interval = NULL, f_interval = c(24))
k_min_plot <- function(data10, data20, data40, k_interval = NULL, f_interval = NULL){
means10 <- k_subsetting(data10, k_interval)
means20 <- k_subsetting(data20, k_interval)
means40 <- k_subsetting(data40, k_interval)
means10 <- f_subsetting(means10, f_interval)
means20 <- f_subsetting(means20, f_interval)
means40 <- f_subsetting(means40, f_interval)
p10<- ggplot(means10, aes(k, min, color = f, group = means10$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .7,method = 'lm')
p10$labels$colour <- "Function"
p10$labels$title <- "20 dimensions"
p20<- ggplot(means10, aes(k, min, color = f, group = means20$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .7,method = 'lm')
p20$labels$colour <- "Function"
p20$labels$title <- "20 dimensions"
p40<- ggplot(means40, aes(k, min, color = f, group = means40$f))+
geom_point(col = 'red')+
geom_line()+
geom_smooth(alpha  = .7,method = 'lm')
p40$labels$colour <- "Function"
p40$labels$title <- "40 dimensions"
grid.arrange(arrangeGrob(p10+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p20+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
p40+theme(axis.title.y = element_blank(),axis.title.x = element_blank()),
nrow=3,
left = textGrob("Optimum Value found", rot = 90),
top  = textGrob("Function"),
bottom = textGrob("Tournament size")
)
)
}
k_min_plot(means10, means20, means40, k_interval = NULL, f_interval = c(24))
