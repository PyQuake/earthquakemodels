quakes=c(0.0009118819655545165, 0.0010722457480732011, 0.0012608111440847705, 0.0014825376961437237, 0.0017432571331550376, 0.0020498267532762363, 0.0024103097807736365, 0.002834187440478855, 0.0033326083277104117, 0.00391868163244994, 0.004607821929992753, 0.005418154606565472, 0.006370992583190564, 0.0074913968763247515, 0.008808835738826609, 0.010357959717613703, 0.01217951301314644, 0.014321405110810632, 0.016839970869653588, 0.019801452210629476, 0.023283740374897006, 0.027378424576081903, 0.032193200929020456, 0.03785470501329344, 0.04451184257206647, 0.05233970594843238, 0.06154417926719389, 0.07236735348502549, 0.08509389373266416, 0.10005852641943402, 0.11765484302177923, 0.1383456521081737, 0.1626751518736282, 0.19128324333905475, 0.2249223606733244, 0.2644772612998241, 0.31098829629592817, 0.36567877313053676, 0.42998713041924, 0.5056047709396918, 0.5945205479701945, 0.6990730750065262, 0.8220122346781872, 0.9665715046375067, 1.1365530026970612, 1.3364274880254718, 1.5714519485776512, 1.8478078674788705, 2.172763804968548, 2.554866572043848, 3.004166023946432, 3.5324793858860044, 4.15370206314937, 4.884173110350356, 5.743104972190109, 6.753088798531288, 7.940688624303146, 9.337140042028006, 10.979171743067036, 12.909971535307495, 15.180322244953894, 17.849937378282036, 20.98903167319145, 24.68016784833302, 29.02042812198362, 34.123967614754356, 40.125016794315094, 47.18141193077247, 55.47874641878364, 65.23525215217744, 76.70753933829562, 90.19734571746842, 106.05947270185597, 124.71111716558241, 146.6428443257332, 172.4314903168543, 202.75533381531605, 238.4119357491972, 280.3391163038581, 329.63962094876985, 387.6101242377833, 455.7753342247026, 535.9280944896187, 630.1765385172666, 740.9995366557454, 871.3118939907725, 1024.541013933847, 1204.7170438875164, 1416.578873949096, 1665.6987765720148, 1958.6289653880597, 2303.0739278995034, 2708.0930646400207, 3184.3389645073357, 3744.337583253458, 4402.817694231691, 5177.0982764316595, 6087.544028667466, 7158.100990601122, 8416.92635820832)
plot(quakes)
quakes=c(0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562)
plot(quasi())
plot(quakes)
quakes=c(0.0009118819655545165, 0.0010722457480732011, 0.0012608111440847705, 0.0014825376961437237, 0.0017432571331550376, 0.0020498267532762363, 0.0024103097807736365, 0.002834187440478855, 0.0033326083277104117, 0.00391868163244994, 0.004607821929992753, 0.005418154606565472, 0.006370992583190564, 0.0074913968763247515, 0.008808835738826609, 0.010357959717613703, 0.01217951301314644, 0.014321405110810632, 0.016839970869653588, 0.019801452210629476, 0.023283740374897006, 0.027378424576081903, 0.032193200929020456, 0.03785470501329344, 0.04451184257206647, 0.05233970594843238, 0.06154417926719389, 0.07236735348502549, 0.08509389373266416, 0.10005852641943402, 0.11765484302177923, 0.1383456521081737, 0.1626751518736282, 0.19128324333905475, 0.2249223606733244, 0.2644772612998241, 0.31098829629592817, 0.36567877313053676, 0.42998713041924, 0.5056047709396918, 0.5945205479701945, 0.6990730750065262, 0.8220122346781872, 0.9665715046375067, 1.1365530026970612, 1.3364274880254718, 1.5714519485776512, 1.8478078674788705, 2.172763804968548, 2.554866572043848, 3.004166023946432, 3.5324793858860044, 4.15370206314937, 4.884173110350356, 5.743104972190109, 6.753088798531288, 7.940688624303146, 9.337140042028006, 10.979171743067036, 12.909971535307495, 15.180322244953894, 17.849937378282036, 20.98903167319145, 24.68016784833302, 29.02042812198362, 34.123967614754356, 40.125016794315094, 47.18141193077247, 55.47874641878364, 65.23525215217744, 76.70753933829562, 90.19734571746842, 106.05947270185597, 124.71111716558241, 146.6428443257332, 172.4314903168543, 202.75533381531605, 238.4119357491972, 280.3391163038581, 329.63962094876985, 387.6101242377833, 455.7753342247026, 535.9280944896187, 630.1765385172666, 740.9995366557454, 871.3118939907725, 1024.541013933847, 1204.7170438875164, 1416.578873949096, 1665.6987765720148, 1958.6289653880597, 2303.0739278995034, 2708.0930646400207, 3184.3389645073357, 3744.337583253458, 4402.817694231691, 5177.0982764316595, 6087.544028667466, 7158.100990601122, 8416.92635820832)
plot(quakes)
quakes=c(0.0009118819655545165, 0.004607821929992753, 0.023283740374897006, 0.11765484302177923, 0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562, 387.6101242377833, 1958.6289653880597)
plot(quakes)
plot(0.0009118819655545165, 0.004607821929992753, 0.023283740374897006, 0.11765484302177923, 0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562)
quakes=c(0.0009118819655545165, 0.004607821929992753, 0.023283740374897006, 0.11765484302177923, 0.5945205479701945, 3.004166023946432, 15.180322244953894, 76.70753933829562)
plot(quakes)
omori=c(88.54674932955562, 14.60476702669664, 0.9041698686485347, 0.0463769533904781, 0.0023297930647788205, 0.00011679357760072451, 5.853681979362953e-06, 2.9337975428414e-07)
plot(omori)
poisson()
poisson(5)
?poisson
ppois(10*(15:25), lambda = 100)
plot(ppois(10*(15:25), lambda = 100))
#!/usr/bin/env Rscript
setwd("~/Documents/estudos/unb/earthquakemodels/Zona/paper_exp")
options(scipen=999)
library(grid)
library(latticeExtra)
library(png)
library(grDevices)
library(RColorBrewer)
#display.brewer.all()
plotMatrixReal = function(modelData, fileToSave, r, c){
# TODO -- hardcoded map is BAD
matrixData = matrix(nrow = r, ncol = c)
k = 1
for (i in 1:r){
for (j in 1:c){
value = as.numeric(levels(modelData$V1[k]))[modelData$V1[k]]
value = value + 1
if (value > 12){
value = 12
}
matrixData[i,j] = value
k = k + 1
}
}
png(fileToSave, width = 800, height = 800)
jBrewColors <- rev(heat.colors(16))
p = levelplot((matrixData), col.regions = jBrewColors, alpha.regions=0.6)
print( p+ layer(grid.raster(as.raster(image)), under=T))
dev.off()
}
#years 5,6,8,9,10
#real
year=2006
while(year<=2010){
setwd("~/Documents/estudos/unb/earthquakemodels/Zona")
region="EastJapan"
image <- readPNG("../data/coast.png")
file = paste("3.0",region,"real",year,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
saveFile = paste("./paper_exp/heatMap/real",region,"_",year,".png",sep="")
plotMatrixReal(raw_data, saveFile, 40, 40)
#20X40!
# a imagem tá uma merda
region="Tohoku"
image <- readPNG("../data/touhoku.png")
file = paste("3.0",region,"real",year,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
saveFile = paste("./paper_exp/heatMap/real",region,"_",year,".png",sep="")
plotMatrixReal(raw_data, saveFile, 20, 40)
region="Kansai"
image <- readPNG("../data/kansai.png")
file = paste("3.0",region,"real",year,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
saveFile = paste("./paper_exp/heatMap/real",region,"_",year,".png",sep="")
plotMatrixReal(raw_data, saveFile, 40, 40)
region="Kanto"
image <- readPNG("../data/kantomap.png")
file = paste("3.0",region,"real",year,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
saveFile = paste("./paper_exp/heatMap/real",region,"_",year,".png",sep="")
plotMatrixReal(raw_data, saveFile, 45, 45)
print(year)
year=year+1
}
setwd("~/Documents/estudos/unb/earthquakemodels/Zona/paper_exp")
calcMediaNP = function(year, region,r,c){
soma = rep(0, r*c)
setwd("~/Documents/estudos/unb/earthquakemodels/Zona/paper_exp")
for(i in 1:10){
file = paste(region,"paper_etasNP",year,i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
calcMediaModelo = function(year, region,r,c){
soma = rep(0, r*c)
setwd("~/Documents/estudos/unb/earthquakemodels/Zona/paper_exp")
for(i in 1:10){
file = paste(region,"paper_modelo",year,i-1,".txt",sep="")
raw_data = read.csv2(file, sep='\n', header=F)
for (k in 1:length(raw_data$V1)){
value = as.numeric(levels(raw_data$V1[k]))[raw_data$V1[k]]
soma[k]=soma[k]+value
}
}
return(soma/10)
}
plotMatrixModel = function(modelData, fileToSave, r, c){
# TODO -- hardcoded map is BAD
matrixData = matrix(nrow = r, ncol = c)
k = 1
for (i in 1:r){
for (j in 1:c){
#model direto
#value = as.numeric(levels(modelData$V1[k]))[modelData$V1[k]]
#media dos model
if(is.na(modelData[k])==T){
value=0
}
else{
value = modelData[k]
if (value > 12){
value = 12
}
}
matrixData[i,j] = value
k = k + 1
}
}
png(fileToSave, width = 800, height = 800)
jBrewColors <- rev(heat.colors(16))
p = levelplot((matrixData), col.regions = jBrewColors, alpha.regions=0.6)
print( p+ layer(grid.raster(as.raster(image)), under=T))
dev.off()
}
year=2006
#modelo
while(year<=2010){
setwd("~/Documents/estudos/unb/earthquakemodels/Zona/paper_exp")
region="EastJapan"
image <- readPNG("../../data/coast.png")
saveFile = paste("heatMap/NP",region,"_",year,".png",sep="")
mediaEastJapan=calcMediaNP(year = year, region = region, r = 40, 40)
saveMedia = paste("./mediaNP",region,"_",year,".txt",sep="")
write.table(round(mediaEastJapan,0), saveMedia)
plotMatrixModel(mediaEastJapan, saveFile, 40, 40)
saveFile = paste("heatMap/modelo",region,"_",year,".png",sep="")
mediaEastJapan=calcMediaModelo(year = year, region = region, r = 40, 40)
saveMedia = paste("./mediaModelo",region,"_",year,".txt",sep="")
write.table(round(mediaEastJapan,0), saveMedia)
plotMatrixModel(mediaEastJapan, saveFile, 40, 40)
#20X40!
# a imagem tá uma merda
region="Tohoku"
image <- readPNG("../../data/touhoku.png")
saveFile = paste("heatMap/NP",region,"_",year,".png",sep="")
mediaTohoku=calcMediaNP(year = year, region = region, r = 20, 40)
saveMedia = paste("./mediaNP",region,"_",year,".txt",sep="")
write.table(round(mediaEastJapan,0), saveMedia)
plotMatrixModel(round(mediaTohoku,0), saveFile, 20, 40)
saveFile = paste("heatMap/modelo",region,"_",year,".png",sep="")
mediaTohoku=calcMediaModelo(year = year, region = region, r = 20, 40)
saveMedia = paste("./mediaModelo",region,"_",year,".txt",sep="")
write.table(round(mediaTohoku,0), saveMedia)
plotMatrixModel(round(mediaTohoku,0), saveFile, 20, 40)
region="Kansai"
image <- readPNG("../../data/kansai.png")
saveFile = paste("heatMap/NP",region,"_",year,".png",sep="")
mediaKansai=calcMediaNP(year = year, region = region, r = 40, 40)
saveMedia = paste("./mediaNP",region,"_",year,".txt",sep="")
write.table(round(mediaKansai,0), saveMedia)
plotMatrixModel(mediaKansai, saveFile, 40, 40)
saveFile = paste("heatMap/modelo",region,"_",year,".png",sep="")
mediaKansai=calcMediaModelo(year = year, region = region, r = 40, 40)
saveMedia = paste("./mediaModelo",region,"_",year,".txt",sep="")
write.table(round(mediaKansai,0), saveMedia)
plotMatrixModel(mediaKansai, saveFile, 40, 40)
region="Kanto"
image <- readPNG("../../data/kantomap.png")
saveFile = paste("heatMap/NP",region,"_",year,".png",sep="")
mediaKanto=calcMediaNP(year = year, region = region, r = 45, 45)
saveMedia = paste("./mediaNP",region,"_",year,".txt",sep="")
write.table(round(mediaKanto,0), saveMedia)
plotMatrixModel(mediaKanto, saveFile, 45, 45)
saveFile = paste("heatMap/modelo",region,"_",year,".png",sep="")
mediaKanto=calcMediaModelo(year = year, region = region, r = 45, 45)
saveMedia = paste("./mediaModelo",region,"_",year,".txt",sep="")
write.table(round(mediaKanto,0), saveMedia)
plotMatrixModel(mediaKanto, saveFile, 45, 45)
year=year+1
print(year)
}
calcMediaSimples = function(data){
soma = rep(0, 10)
for (k in 1:length(data)){
value = as.numeric(levels(data[[k]]))
soma[k]=soma[k]+value
}
return(sum(soma)/10)
}
converting = function(data){
soma = rep(0, 10)
for (k in 1:length(data)){
value = as.numeric(levels(data[[k]]))
soma[k]=soma[k]+value
}
return(soma)
}
getingData = function(region, year){
setwd("~/Documents/estudos/unb/earthquakemodels/Zona/paper_exp/")
for (i in 1:10){
file = paste(region,"paper_modelo",year,i-1,".txtloglikelihood.txt",sep="")
gaModel[i] <<- read.csv2(file, sep='\n', header=F)
file = paste(region,"paper_etasNP",year,i-1,".txtloglikelihood.txt",sep="")
NP[i] <<- read.csv2(file, sep='\n', header=F)
}
}
year=2006
while(year<=2010){
gaModel=rep(0,10)
NP=rep(0,10)
getingData("Kanto", year)
mediaGAModel = calcMediaSimples(gaModel)
cat("mu é a media do GAModel", year, sep="")
cat("against the list method for same year. Region: Kanto")
print(t.test(mu=mediaGAModel, converting(NP)))
gaModel=rep(0,10)
NP=rep(0,10)
getingData("EastJapan", year)
mediaGAModel = calcMediaSimples(gaModel)
cat("mu é a media do GAModel", year, sep="")
cat("against the list method for same year. Region: EastJapan")
print(t.test(mu=mediaGAModel, converting(NP)))
gaModel=rep(0,10)
NP=rep(0,10)
getingData("Tohoku", year)
mediaGAModel = calcMediaSimples(gaModel)
cat("mu é a media do GAModel", year, sep="")
cat("against the list method for same year. Region: Tohoku")
print(t.test(mu=mediaGAModel, converting(NP)))
gaModel=rep(0,10)
NP=rep(0,10)
getingData("Kansai", year)
mediaGAModel = calcMediaSimples(gaModel)
cat("mu é a media do GAModel", year, sep="")
cat("against the list method for same year. Region: Kansai")
print(t.test(mu=mediaGAModel, converting(NP)))
year=year+1
}
mediaGAModel
media = converting(NP)
media
